{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff191660011790556103e8600e5534801561002357600080fd5b50616a2d806100336000396000f3fe60806040523480156200001157600080fd5b5060043610620001455760003560e01c806397754ae911620000bb578063c88a5e6d116200007a578063c88a5e6d14620002b9578063d06d822914620002d0578063d82555f114620002e7578063e9a79a7b14620002fe578063fa7626d4146200031557600080fd5b806397754ae914620002425780639a8325a01462000259578063af9bbe5f1462000270578063b9c071b41462000287578063ba414fa6146200029e57600080fd5b80632d6c17a311620001085780632d6c17a314620001cf5780633a76846314620001e65780633bf82db114620001fd5780636bce989b14620002145780636f597075146200022b57600080fd5b80630a9254e4146200014a578063108554f21462000156578063233240ee146200016d57806329a9e300146200018457806329ce9dde146200019b575b600080fd5b6200015462000323565b005b620001546200016736600462002504565b62000679565b620001546200017e36600462002533565b62000752565b62000154620001953660046200255a565b6200082e565b620001b2620001ac36600462002673565b620008e0565b6040516001600160a01b0390911681526020015b60405180910390f35b62000154620001e0366004620026f3565b62000999565b620001b2600080516020620069b883398151915281565b620001546200020e3660046200270d565b620009d9565b62000154620002253660046200270d565b62000abb565b620001546200023c36600462002533565b62000acf565b620001546200025336600462002762565b62000b79565b620001b26200026a366004620027bc565b62000dba565b62000154620002813660046200270d565b62000e4f565b6200015462000298366004620026f3565b62000efd565b620002a862000f1e565b6040519015158152602001620001c6565b62000154620002ca36600462002504565b6200104f565b62000154620002e13660046200255a565b62001085565b62000154620002f83660046200270d565b62001137565b620001546200030f36600462002504565b620011e8565b600054620002a89060ff1681565b604051620003319062002420565b604051809103906000f0801580156200034e573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560405163792e11f560e01b81526002600482015263792e11f5906024016000604051808303816000875af1158015620003ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003d5919081019062002824565b8051620003eb91600b916020909101906200242e565b50600b600081548110620004035762000403620028c9565b600091825260209091200154600c80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b815260048101929092526024820152600560448201526427bbb732b960d91b6064820152600080516020620069b88339815191529063c657c71890608401600060405180830381600087803b1580156200049257600080fd5b505af1158015620004a7573d6000803e3d6000fd5b50505050600b600181548110620004c257620004c2620028c9565b600091825260209091200154600d80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b81526004810192909252602482015260096044820152682232bb32b637b832b960b91b6064820152600080516020620069b88339815191529063c657c71890608401600060405180830381600087803b1580156200055557600080fd5b505af11580156200056a573d6000803e3d6000fd5b505050506040516200057c9062002498565b604051809103906000f08015801562000599573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169182179055604051620005c790620024a6565b6001600160a01b039091168152602001604051809103906000f080158015620005f4573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316908117909155600a54600e546040516340c10f1960e01b815291909316926340c10f19926200064392909190600401620028df565b600060405180830381600087803b1580156200065e57600080fd5b505af115801562000673573d6000803e3d6000fd5b50505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d90620006af9085908590600401620028df565b600060405180830381600087803b158015620006ca57600080fd5b505af1158015620006df573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620069b883398151915292506306447d5691506024015b600060405180830381600087803b1580156200073557600080fd5b505af11580156200074a573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d906200078c908490600160801b90600401620028df565b600060405180830381600087803b158015620007a757600080fd5b505af1158015620007bc573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620069b8833981519152925063ca669fa791506024015b600060405180830381600087803b1580156200081257600080fd5b505af115801562000827573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000868908590600160801b90600401620028df565b600060405180830381600087803b1580156200088357600080fd5b505af115801562000898573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620069b883398151915292506347e50cce91506044016200071a565b604051638d1cc92560e01b81526000908190600080516020620069b883398151915290638d1cc92590620009199087906004016200291e565b6000604051808303816000875af115801562000939573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000963919081019062002953565b8360405160200162000977929190620029d3565b60405160208183030381529060405290508051602082016000f0949350505050565b600080516020620069b883398151915263e5d6bf02620009ba834262002a1c565b6040518263ffffffff1660e01b8152600401620007f791815260200190565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000a0f9086908590600401620028df565b600060405180830381600087803b15801562000a2a57600080fd5b505af115801562000a3f573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620069b883398151915292506345b5607891506044015b600060405180830381600087803b15801562000a9d57600080fd5b505af115801562000ab2573d6000803e3d6000fd5b50505050505050565b62000aca838383600062000b79565b505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000b09908490600160801b90600401620028df565b600060405180830381600087803b15801562000b2457600080fd5b505af115801562000b39573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620069b883398151915292506306447d569150602401620007f7565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000bcf9162002a32565b6000604051808303816000865af19150503d806000811462000c0e576040519150601f19603f3d011682016040523d82523d6000602084013e62000c13565b606091505b5091505060008180602001905181019062000c2f919062002a50565b905062000ca18462000c9a8762000c716370a0823160e01b62000c5460018d6200128e565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620012b3565b82156200074a5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000cec919062002a32565b6000604051808303816000865af19150503d806000811462000d2b576040519150601f19603f3d011682016040523d82523d6000602084013e62000d30565b606091505b5091505060008180602001905181019062000d4c919062002a50565b90508286101562000d775762000d63868462002a1c565b62000d6f908262002a1c565b905062000d92565b62000d83838762002a1c565b62000d8f908262002a6a565b90505b62000db08162000c9a6318160ddd60e01b62000c5460018d6200128e565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620069b883398151915290638d1cc9259062000df39086906004016200291e565b6000604051808303816000875af115801562000e13573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e3d919081019062002953565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000e859086908590600401620028df565b600060405180830381600087803b15801562000ea057600080fd5b505af115801562000eb5573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620069b883398151915292506347e50cce915060440162000a82565b600080516020620069b883398151915263e5d6bf02620009ba834262002a6a565b60008054610100900460ff161562000f3f5750600054610100900460ff1690565b6000600080516020620069b88339815191523b156200104a57604051600090600080516020620069b8833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062000fac9083906519985a5b195960d21b90602001620028df565b60408051601f198184030181529082905262000fcc929160200162002a80565b60408051601f198184030181529082905262000fe89162002a32565b6000604051808303816000865af19150503d806000811462001027576040519150601f19603f3d011682016040523d82523d6000602084013e6200102c565b606091505b509150508080602001905181019062001046919062002ab3565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d906200071a9085908590600401620028df565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d90620010bf908590600160801b90600401620028df565b600060405180830381600087803b158015620010da57600080fd5b505af1158015620010ef573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620069b883398151915292506345b5607891506044016200071a565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051620011bd906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000aca8162000c9a8462000c716370a0823160e01b62000c5460018a6200128e565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d906200121e9085908590600401620028df565b600060405180830381600087803b1580156200123957600080fd5b505af11580156200124e573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620069b8833981519152925063ca669fa791506024016200071a565b6005820180546001600160a01b0319166001600160a01b038316179055815b92915050565b620012bf8282620012c3565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200133657602002820191906000526020600020905b81548152602001906001019080831162001321575b505050505090506000836200134b8362001635565b6040516020016200135e92919062002a80565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620013b291869188910162002ad3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620013ed57620013eb87620016e9565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200142e91879189910162002ad3565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162001475919062002a32565b600060405180830381855afa9150503d8060008114620014b2576040519150601f19603f3d011682016040523d82523d6000602084013e620014b7565b606091505b509150620014d4905081620014ce88602062002b0f565b62002396565b604051630667f9d760e41b815290925060009150600080516020620069b88339815191529063667f9d709062001511908b908790600401620028df565b6020604051808303816000875af115801562001531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001557919062002a50565b9050808214620015845760405162461bcd60e51b81526004016200157b9062002b29565b60405180910390fd5b6040516370ca10bb60e01b8152600080516020620069b8833981519152906370ca10bb90620015bc908b9087908e9060040162002b9f565b600060405180830381600087803b158015620015d757600080fd5b505af1158015620015ec573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200162160028b016000620024b4565b896004016000905550505050505050505050565b606060008251602062001649919062002b0f565b67ffffffffffffffff81111562001664576200166462002598565b6040519080825280601f01601f1916602001820160405280156200168f576020820181803683370190505b50905060005b8351811015620016e2576000848281518110620016b657620016b6620028c9565b602002602001015190508082602002602001840152508080620016d99062002bc0565b91505062001695565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200175b57602002820191906000526020600020905b81548152602001906001019080831162001746575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620017a79250859187910162002ad3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562001846576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200181691859187910162002ad3565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620018548362001635565b6040516020016200186792919062002a80565b6040516020818303038152906040529050600080516020620069d883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018c657600080fd5b505af1158015620018db573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620018fc919062002a32565b600060405180830381855afa9150503d806000811462001939576040519150601f19603f3d011682016040523d82523d6000602084013e6200193e565b606091505b50915062001955905081620014ce87602062002b0f565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620069b8833981519152906365bc9481906024016000604051808303816000875af1158015620019b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620019dc919081019062002c49565b509050805160010362001ca5576000600080516020620069d883398151915260001c6001600160a01b031663667f9d70898460008151811062001a235762001a23620028c9565b60200260200101516040518363ffffffff1660e01b815260040162001a4a929190620028df565b6020604051808303816000875af115801562001a6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a90919062002a50565b90508062001af4577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062001ad05762001ad0620028c9565b602002602001015160001c60405162001aeb929190620028df565b60405180910390a15b80831462001b165760405162461bcd60e51b81526004016200157b9062002b29565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162001b4e92919062002ad3565b604051602081830303815290604052805190602001208560008151811062001b7a5762001b7a620028c9565b602002602001015160001c60405162001b97949392919062002caa565b60405180910390a18160008151811062001bb55762001bb5620028c9565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262001c00918a918c910162002ad3565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162001c6a918a918c910162002ad3565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002246565b600181511115620021f25760005b8151811015620021eb576000600080516020620069d883398151915260001c6001600160a01b031663667f9d708a85858151811062001cf65762001cf6620028c9565b60200260200101516040518363ffffffff1660e01b815260040162001d1d929190620028df565b6020604051808303816000875af115801562001d3d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d63919062002a50565b90508062001dc6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062001da25762001da2620028c9565b602002602001015160001c60405162001dbd929190620028df565b60405180910390a15b600080516020620069d883398151915260001c6001600160a01b03166370ca10bb8a85858151811062001dfd5762001dfd620028c9565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162001e2b9392919062002b9f565b600060405180830381600087803b15801562001e4657600080fd5b505af115801562001e5b573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162001e7d919062002a32565b600060405180830381855afa9150503d806000811462001eba576040519150601f19603f3d011682016040523d82523d6000602084013e62001ebf565b606091505b50909250905062001ed781620014ce8b602062002b0f565b955081801562001eeb575061133760f01b86145b156200213e577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162001f2992919062002ad3565b6040516020818303038152906040528051906020012088888151811062001f545762001f54620028c9565b602002602001015160001c60405162001f71949392919062002caa565b60405180910390a184848151811062001f8e5762001f8e620028c9565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262001fd9918d918f910162002ad3565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200206692919062002ad3565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620069d883398151915260001c6001600160a01b03166370ca10bb8c878781518110620020d857620020d8620028c9565b6020026020010151866040518463ffffffff1660e01b8152600401620021019392919062002b9f565b600060405180830381600087803b1580156200211c57600080fd5b505af115801562002131573d6000803e3d6000fd5b50505050505050620021eb565b600080516020620069d883398151915260001c6001600160a01b03166370ca10bb8c878781518110620021755762002175620028c9565b6020026020010151866040518463ffffffff1660e01b81526004016200219e9392919062002b9f565b600060405180830381600087803b158015620021b957600080fd5b505af1158015620021ce573d6000803e3d6000fd5b505050505050508080620021e29062002bc0565b91505062001cb3565b5062002246565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b60648201526084016200157b565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916200228a9188918a910162002ad3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620022ec5760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b60448201526064016200157b565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200231d60028a016000620024b4565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620023639188918a910162002ad3565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620023ad578451620023b0565b60205b905060005b818110156200241657620023cb81600862002b0f565b86620023d8838862002a6a565b81518110620023eb57620023eb620028c9565b01602001516001600160f81b031916901c9290921791806200240d8162002bc0565b915050620023b5565b5090949350505050565b6129808062002cdb83390190565b82805482825590600052602060002090810192821562002486579160200282015b828111156200248657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200244f565b5062002494929150620024d7565b5090565b610d62806200565b83390190565b6105fb80620063bd83390190565b5080546000825590600052602060002090810190620024d49190620024d7565b50565b5b80821115620024945760008155600101620024d8565b6001600160a01b0381168114620024d457600080fd5b600080604083850312156200251857600080fd5b82356200252581620024ee565b946020939093013593505050565b6000602082840312156200254657600080fd5b81356200255381620024ee565b9392505050565b600080604083850312156200256e57600080fd5b82356200257b81620024ee565b915060208301356200258d81620024ee565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620025da57620025da62002598565b604052919050565b600067ffffffffffffffff821115620025ff57620025ff62002598565b50601f01601f191660200190565b6000620026246200261e84620025e2565b620025ae565b90508281528383830111156200263957600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200266257600080fd5b62002553838335602085016200260d565b600080604083850312156200268757600080fd5b823567ffffffffffffffff80821115620026a057600080fd5b620026ae8683870162002650565b93506020850135915080821115620026c557600080fd5b508301601f81018513620026d857600080fd5b620026e9858235602084016200260d565b9150509250929050565b6000602082840312156200270657600080fd5b5035919050565b6000806000606084860312156200272357600080fd5b83356200273081620024ee565b925060208401356200274281620024ee565b929592945050506040919091013590565b8015158114620024d457600080fd5b600080600080608085870312156200277957600080fd5b84356200278681620024ee565b935060208501356200279881620024ee565b9250604085013591506060850135620027b18162002753565b939692955090935050565b600060208284031215620027cf57600080fd5b813567ffffffffffffffff811115620027e757600080fd5b620027f58482850162002650565b949350505050565b600067ffffffffffffffff8211156200281a576200281a62002598565b5060051b60200190565b600060208083850312156200283857600080fd5b825167ffffffffffffffff8111156200285057600080fd5b8301601f810185136200286257600080fd5b8051620028736200261e82620027fd565b81815260059190911b820183019083810190878311156200289357600080fd5b928401925b82841015620028be578351620028ae81620024ee565b8252928401929084019062002898565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b60005b8381101562002915578181015183820152602001620028fb565b50506000910152565b60208152600082518060208401526200293f816040850160208701620028f8565b601f01601f19169190910160400192915050565b6000602082840312156200296657600080fd5b815167ffffffffffffffff8111156200297e57600080fd5b8201601f810184136200299057600080fd5b8051620029a16200261e82620025e2565b818152856020838501011115620029b757600080fd5b620029ca826020830160208601620028f8565b95945050505050565b60008351620029e7818460208801620028f8565b835190830190620029fd818360208801620028f8565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620012ad57620012ad62002a06565b6000825162002a46818460208701620028f8565b9190910192915050565b60006020828403121562002a6357600080fd5b5051919050565b80820180821115620012ad57620012ad62002a06565b6001600160e01b031983168152815160009062002aa5816004850160208701620028f8565b919091016004019392505050565b60006020828403121562002ac657600080fd5b8151620025538162002753565b825160009082906020808701845b8381101562002aff5781518552938201939082019060010162002ae1565b5050948252509092019392505050565b8082028115828204841417620012ad57620012ad62002a06565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b6001600160a01b039390931683526020830191909152604082015260600190565b60006001820162002bd55762002bd562002a06565b5060010190565b600082601f83011262002bee57600080fd5b8151602062002c016200261e83620027fd565b82815260059290921b8401810191818101908684111562002c2157600080fd5b8286015b8481101562002c3e578051835291830191830162002c25565b509695505050505050565b6000806040838503121562002c5d57600080fd5b825167ffffffffffffffff8082111562002c7657600080fd5b62002c848683870162002bdc565b9350602085015191508082111562002c9b57600080fd5b50620026e98582860162002bdc565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe6000805460ff191660011790556b75736572206164647265737360a01b60a052600c60805260ac6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db760085534801561005957600080fd5b50612917806100696000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639a8325a0116100b8578063c88a5e6d1161007c578063c88a5e6d146102c3578063d06d8229146102d6578063d82555f1146102e9578063e9a79a7b146102fc578063f82de7b01461030f578063fa7626d41461032257600080fd5b80639a8325a014610246578063af9bbe5f14610259578063b90a68fa1461026c578063b9c071b414610298578063ba414fa6146102ab57600080fd5b80633a7684631161010a5780633a768463146101c55780633bf82db1146101da5780636bce989b146101ed5780636f59707514610200578063792e11f51461021357806397754ae91461023357600080fd5b8063108554f214610147578063233240ee1461015c57806329a9e3001461016f57806329ce9dde146101825780632d6c17a3146101b2575b600080fd5b61015a61015536600461217b565b61032f565b005b61015a61016a3660046121a7565b610400565b61015a61017d3660046121cb565b6104d4565b6101956101903660046122d1565b61057f565b6040516001600160a01b0390911681526020015b60405180910390f35b61015a6101c0366004612349565b610630565b6101956000805160206128a283398151915281565b61015a6101e8366004612362565b61066c565b61015a6101fb366004612362565b610746565b61015a61020e3660046121a7565b610758565b610226610221366004612349565b6107fb565b6040516101a991906123a3565b61015a6102413660046123fe565b61096b565b610195610254366004612451565b610b8b565b61015a610267366004612362565b610c1a565b600880546040805160208082018490528251808303820181529183019092528051910120909155610195565b61015a6102a6366004612349565b610cc1565b6102b3610cdf565b60405190151581526020016101a9565b61015a6102d136600461217b565b610e02565b61015a6102e43660046121cb565b610e35565b61015a6102f7366004612362565b610ee0565b61015a61030a36600461217b565b610f8b565b61015a61031d366004612349565b61102a565b6000546102b39060ff1681565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610362908590859060040161248e565b600060405180830381600087803b15801561037c57600080fd5b505af1158015610390573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206128a283398151915292506306447d5691506024015b600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610437908490600160801b9060040161248e565b600060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206128a2833981519152925063ca669fa791506024015b600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d9061050b908590600160801b9060040161248e565b600060405180830381600087803b15801561052557600080fd5b505af1158015610539573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206128a283398151915292506347e50cce91506044016103ca565b604051638d1cc92560e01b815260009081906000805160206128a283398151915290638d1cc925906105b59087906004016124cb565b6000604051808303816000875af11580156105d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105fc91908101906124fe565b8360405160200161060e929190612575565b60405160208183030381529060405290508051602082016000f0949350505050565b6000805160206128a283398151915263e5d6bf0261064e83426125ba565b6040518263ffffffff1660e01b815260040161049f91815260200190565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d9061069f908690859060040161248e565b600060405180830381600087803b1580156106b957600080fd5b505af11580156106cd573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206128a283398151915292506345b5607891506044015b600060405180830381600087803b15801561072957600080fd5b505af115801561073d573d6000803e3d6000fd5b50505050505050565b610753838383600061096b565b505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d9061078f908490600160801b9060040161248e565b600060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206128a283398151915292506306447d56915060240161049f565b606060008267ffffffffffffffff81111561081857610818612204565b604051908082528060200260200182016040528015610841578160200160208202803683370190505b50905060005b83811015610964576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b591906125cd565b60405163c88a5e6d60e01b81529091506000805160206128a28339815191529063c88a5e6d906108f490849068056bc75e2d631000009060040161248e565b600060405180830381600087803b15801561090e57600080fd5b505af1158015610922573d6000803e3d6000fd5b5050505080838381518110610939576109396125ea565b6001600160a01b0390921660209283029190910190910152508061095c81612600565b915050610847565b5092915050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916109bf91612619565b6000604051808303816000865af19150503d80600081146109fc576040519150601f19603f3d011682016040523d82523d6000602084013e610a01565b606091505b50915050600081806020019051810190610a1b9190612635565b9050610a8784610a8187610a586370a0823160e01b610a3b60018d61106b565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611090565b82156103f85760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691610acf9190612619565b6000604051808303816000865af19150503d8060008114610b0c576040519150601f19603f3d011682016040523d82523d6000602084013e610b11565b606091505b50915050600081806020019051810190610b2b9190612635565b905082861015610b5057610b3f86846125ba565b610b4990826125ba565b9050610b67565b610b5a83876125ba565b610b64908261264e565b90505b610b8181610a816318160ddd60e01b610a3b60018d61106b565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206128a283398151915290638d1cc92590610bc19086906004016124cb565b6000604051808303816000875af1158015610be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c0891908101906124fe565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610c4d908690859060040161248e565b600060405180830381600087803b158015610c6757600080fd5b505af1158015610c7b573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206128a283398151915292506347e50cce915060440161070f565b6000805160206128a283398151915263e5d6bf0261064e834261264e565b60008054610100900460ff1615610cff5750600054610100900460ff1690565b60006000805160206128a28339815191523b15610dfd576040516000906000805160206128a2833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490610d679083906519985a5b195960d21b9060200161248e565b60408051601f1981840301815290829052610d859291602001612661565b60408051601f1981840301815290829052610d9f91612619565b6000604051808303816000865af19150503d8060008114610ddc576040519150601f19603f3d011682016040523d82523d6000602084013e610de1565b606091505b5091505080806020019051810190610df99190612692565b9150505b919050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d906103ca908590859060040161248e565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610e6c908590600160801b9060040161248e565b600060405180830381600087803b158015610e8657600080fd5b505af1158015610e9a573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206128a283398151915292506345b5607891506044016103ca565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051610f65906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a161075381610a8184610a586370a0823160e01b610a3b60018a61106b565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610fbe908590859060040161248e565b600060405180830381600087803b158015610fd857600080fd5b505af1158015610fec573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03851660048201526000805160206128a2833981519152925063ca669fa791506024016103ca565b6000611036824361264e565b6040516301f7b4f360e41b8152600481018290529091506000805160206128a283398151915290631f7b4f30906024016103ca565b6005820180546001600160a01b0319166001600160a01b038316179055815b92915050565b61109a828261109e565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561110f57602002820191906000526020600020905b8154815260200190600101908083116110fb575b50505050509050600083611122836113eb565b604051602001611133929190612661565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916111859186918891016126af565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166111bd576111bb8761148b565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916111fc9187918991016126af565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516112419190612619565b600060405180830381855afa9150503d806000811461127c576040519150601f19603f3d011682016040523d82523d6000602084013e611281565b606091505b50915061129a9050816112958860206126e9565b6120af565b604051630667f9d760e41b8152909250600091506000805160206128a28339815191529063667f9d70906112d4908b90879060040161248e565b6020604051808303816000875af11580156112f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113179190612635565b90508082146113415760405162461bcd60e51b815260040161133890612700565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206128a2833981519152906370ca10bb90611376908b9087908e90600401612776565b600060405180830381600087803b15801561139057600080fd5b505af11580156113a4573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556113d760028b01600061212c565b896004016000905550505050505050505050565b60606000825160206113fd91906126e9565b67ffffffffffffffff81111561141557611415612204565b6040519080825280601f01601f19166020018201604052801561143f576020820181803683370190505b50905060005b8351811015610964576000848281518110611462576114626125ea565b60200260200101519050808260200260200184015250808061148390612600565b915050611445565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156114fb57602002820191906000526020600020905b8154815260200190600101908083116114e7575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350611545925085918791016126af565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156115e1576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916115b19185918791016126af565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836115ed836113eb565b6040516020016115fe929190612661565b60405160208183030381529060405290506000805160206128c283398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561165b57600080fd5b505af115801561166f573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405161168e9190612619565b600060405180830381855afa9150503d80600081146116c9576040519150601f19603f3d011682016040523d82523d6000602084013e6116ce565b606091505b5091506116e29050816112958760206126e9565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206128a2833981519152906365bc9481906024016000604051808303816000875af115801561173d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117659190810190612817565b5090508051600103611a0c5760006000805160206128c283398151915260001c6001600160a01b031663667f9d7089846000815181106117a7576117a76125ea565b60200260200101516040518363ffffffff1660e01b81526004016117cc92919061248e565b6020604051808303816000875af11580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180f9190612635565b90508061186d577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811061184b5761184b6125ea565b602002602001015160001c60405161186492919061248e565b60405180910390a15b80831461188c5760405162461bcd60e51b815260040161133890612700565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016118c29291906126af565b60405160208183030381529060405280519060200120856000815181106118eb576118eb6125ea565b602002602001015160001c6040516119069493929190612871565b60405180910390a181600081518110611921576119216125ea565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909261196a918a918c91016126af565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916119d2918a918c91016126af565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550611f67565b600181511115611f145760005b8151811015611f0e5760006000805160206128c283398151915260001c6001600160a01b031663667f9d708a858581518110611a5757611a576125ea565b60200260200101516040518363ffffffff1660e01b8152600401611a7c92919061248e565b6020604051808303816000875af1158015611a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abf9190612635565b905080611b1c577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611afa57611afa6125ea565b602002602001015160001c604051611b1392919061248e565b60405180910390a15b6000805160206128c283398151915260001c6001600160a01b03166370ca10bb8a858581518110611b4f57611b4f6125ea565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401611b7b93929190612776565b600060405180830381600087803b158015611b9557600080fd5b505af1158015611ba9573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051611bc99190612619565b600060405180830381855afa9150503d8060008114611c04576040519150601f19603f3d011682016040523d82523d6000602084013e611c09565b606091505b509092509050611c1e816112958b60206126e9565b9550818015611c31575061133760f01b86145b15611e6c577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001611c6c9291906126af565b60405160208183030381529060405280519060200120888881518110611c9457611c946125ea565b602002602001015160001c604051611caf9493929190612871565b60405180910390a1848481518110611cc957611cc96125ea565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611d12918d918f91016126af565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001611d9d9291906126af565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206128c283398151915260001c6001600160a01b03166370ca10bb8c878781518110611e0b57611e0b6125ea565b6020026020010151866040518463ffffffff1660e01b8152600401611e3293929190612776565b600060405180830381600087803b158015611e4c57600080fd5b505af1158015611e60573d6000803e3d6000fd5b50505050505050611f0e565b6000805160206128c283398151915260001c6001600160a01b03166370ca10bb8c878781518110611e9f57611e9f6125ea565b6020026020010151866040518463ffffffff1660e01b8152600401611ec693929190612776565b600060405180830381600087803b158015611ee057600080fd5b505af1158015611ef4573d6000803e3d6000fd5b505050505050508080611f0690612600565b915050611a19565b50611f67565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b6064820152608401611338565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291611fa99188918a91016126af565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166120095760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b6044820152606401611338565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561203860028a01600061212c565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161207c9188918a91016126af565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116120c45784516120c7565b60205b905060005b81811015612122576120df8160086126e9565b866120ea838861264e565b815181106120fa576120fa6125ea565b01602001516001600160f81b031916901c92909217918061211a81612600565b9150506120cc565b5090949350505050565b508054600082559060005260206000209081019061214a919061214d565b50565b5b80821115612162576000815560010161214e565b5090565b6001600160a01b038116811461214a57600080fd5b6000806040838503121561218e57600080fd5b823561219981612166565b946020939093013593505050565b6000602082840312156121b957600080fd5b81356121c481612166565b9392505050565b600080604083850312156121de57600080fd5b82356121e981612166565b915060208301356121f981612166565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561224357612243612204565b604052919050565b600067ffffffffffffffff82111561226557612265612204565b50601f01601f191660200190565b60006122866122818461224b565b61221a565b905082815283838301111561229a57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126122c257600080fd5b6121c483833560208501612273565b600080604083850312156122e457600080fd5b823567ffffffffffffffff808211156122fc57600080fd5b612308868387016122b1565b9350602085013591508082111561231e57600080fd5b508301601f8101851361233057600080fd5b61233f85823560208401612273565b9150509250929050565b60006020828403121561235b57600080fd5b5035919050565b60008060006060848603121561237757600080fd5b833561238281612166565b9250602084013561239281612166565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b818110156123e45783516001600160a01b0316835292840192918401916001016123bf565b50909695505050505050565b801515811461214a57600080fd5b6000806000806080858703121561241457600080fd5b843561241f81612166565b9350602085013561242f81612166565b9250604085013591506060850135612446816123f0565b939692955090935050565b60006020828403121561246357600080fd5b813567ffffffffffffffff81111561247a57600080fd5b612486848285016122b1565b949350505050565b6001600160a01b03929092168252602082015260400190565b60005b838110156124c25781810151838201526020016124aa565b50506000910152565b60208152600082518060208401526124ea8160408501602087016124a7565b601f01601f19169190910160400192915050565b60006020828403121561251057600080fd5b815167ffffffffffffffff81111561252757600080fd5b8201601f8101841361253857600080fd5b80516125466122818261224b565b81815285602083850101111561255b57600080fd5b61256c8260208301602086016124a7565b95945050505050565b600083516125878184602088016124a7565b83519083019061259b8183602088016124a7565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561108a5761108a6125a4565b6000602082840312156125df57600080fd5b81516121c481612166565b634e487b7160e01b600052603260045260246000fd5b600060018201612612576126126125a4565b5060010190565b6000825161262b8184602087016124a7565b9190910192915050565b60006020828403121561264757600080fd5b5051919050565b8082018082111561108a5761108a6125a4565b6001600160e01b03198316815281516000906126848160048501602087016124a7565b919091016004019392505050565b6000602082840312156126a457600080fd5b81516121c4816123f0565b825160009082906020808701845b838110156126d9578151855293820193908201906001016126bd565b5050948252509092019392505050565b808202811582820484141761108a5761108a6125a4565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b6001600160a01b039390931683526020830191909152604082015260600190565b600082601f8301126127a857600080fd5b8151602067ffffffffffffffff8211156127c4576127c4612204565b8160051b6127d382820161221a565b92835284810182019282810190878511156127ed57600080fd5b83870192505b8483101561280c578251825291830191908301906127f3565b979650505050505050565b6000806040838503121561282a57600080fd5b825167ffffffffffffffff8082111561284257600080fd5b61284e86838701612797565b9350602085015191508082111561286457600080fd5b5061233f85828601612797565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122038c8173902000acb5693571905bd5259b3ca0b684e2b3ce6eae05f2f8ffd2dc464736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600a81526020016926b7b1b5902a37b5b2b760b11b815250604051806040016040528060038152602001624d544b60e81b81525081600390816200006291906200018f565b5060046200007182826200018f565b5050506200008e620000886200009460201b60201c565b62000098565b6200025b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011557607f821691505b6020821081036200013657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018a57600081815260208120601f850160051c81016020861015620001655750805b601f850160051c820191505b81811015620001865782815560010162000171565b5050505b505050565b81516001600160401b03811115620001ab57620001ab620000ea565b620001c381620001bc845462000100565b846200013c565b602080601f831160018114620001fb5760008415620001e25750858301515b600019600386901b1c1916600185901b17855562000186565b600085815260208120601f198616915b828110156200022c578886015182559484019460019091019084016200020b565b50858210156200024b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610af7806200026b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101eb578063a9059cbb146101fe578063dd62ed3e14610211578063f2fde38b1461022457600080fd5b806370a0823114610197578063715018a6146101c05780638da5cb5b146101c857806395d89b41146101e357600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610237565b60405161010f9190610941565b60405180910390f35b61012b6101263660046109ab565b6102c9565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046109d5565b6102e3565b6040516012815260200161010f565b61012b61017d3660046109ab565b610307565b6101956101903660046109ab565b610329565b005b61013f6101a5366004610a11565b6001600160a01b031660009081526020819052604090205490565b61019561033f565b6005546040516001600160a01b03909116815260200161010f565b610102610353565b61012b6101f93660046109ab565b610362565b61012b61020c3660046109ab565b6103e2565b61013f61021f366004610a33565b6103f0565b610195610232366004610a11565b61041b565b60606003805461024690610a66565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610a66565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d7818585610494565b60019150505b92915050565b6000336102f18582856105b8565b6102fc858585610632565b506001949350505050565b6000336102d781858561031a83836103f0565b6103249190610aa0565b610494565b6103316107d6565b61033b8282610830565b5050565b6103476107d6565b61035160006108ef565b565b60606004805461024690610a66565b6000338161037082866103f0565b9050838110156103d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102fc8286868403610494565b6000336102d7818585610632565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104236107d6565b6001600160a01b0381166104885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cc565b610491816108ef565b50565b6001600160a01b0383166104f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166105575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105c484846103f0565b9050600019811461062c578181101561061f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103cc565b61062c8484848403610494565b50505050565b6001600160a01b0383166106965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b038316600090815260208190526040902054818110156107705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361062c565b6005546001600160a01b031633146103515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cc565b6001600160a01b0382166108865760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b80600260008282546108989190610aa0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b8181101561096e57858101830151858201604001528201610952565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109a657600080fd5b919050565b600080604083850312156109be57600080fd5b6109c78361098f565b946020939093013593505050565b6000806000606084860312156109ea57600080fd5b6109f38461098f565b9250610a016020850161098f565b9150604084013590509250925092565b600060208284031215610a2357600080fd5b610a2c8261098f565b9392505050565b60008060408385031215610a4657600080fd5b610a4f8361098f565b9150610a5d6020840161098f565b90509250929050565b600181811c90821680610a7a57607f821691505b602082108103610a9a57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102dd57634e487b7160e01b600052601160045260246000fdfea2646970667358221220e333e8ac3938549a4fcd440e15044136577de9c57f85101b445a7639b2865a5264736f6c634300081100336080604052606460035534801561001557600080fd5b506040516105fb3803806105fb833981016040819052610034916100b2565b61003d33610062565b600180546001600160a01b0319166001600160a01b03929092169190911790556100e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c457600080fd5b81516001600160a01b03811681146100db57600080fd5b9392505050565b61050a806100f16000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a4d66daf1161005b578063a4d66daf146100e7578063e9439b13146100fe578063f2fde38b1461011e578063fc0c546a1461013157600080fd5b806327ea6f2b1461008d578063715018a6146100a25780638da5cb5b146100aa5780639e353a1e146100d4575b600080fd5b6100a061009b36600461040a565b610144565b005b6100a0610151565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100e236600461043f565b610165565b6100f060035481565b6040519081526020016100cb565b6100f061010c366004610469565b60026020526000908152604090205481565b6100a061012c366004610469565b6102e7565b6001546100b7906001600160a01b031681565b61014c610360565b600355565b610159610360565b61016360006103ba565b565b6001600160a01b0382166101b45760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064015b60405180910390fd5b6003548111156101f65760405162461bcd60e51b815260206004820152600d60248201526c115610d1515114d7d312535255609a1b60448201526064016101ab565b6001600160a01b03821660009081526002602052604090205442101561024a5760405162461bcd60e51b81526020600482015260096024820152682a292cafa620aa22a960b91b60448201526064016101ab565b6102564261012c61048b565b6001600160a01b038381166000818152600260205260409081902093909355600154925163a9059cbb60e01b815260048101919091526024810184905291169063a9059cbb906044016020604051808303816000875af11580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e291906104b2565b505050565b6102ef610360565b6001600160a01b0381166103545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ab565b61035d816103ba565b50565b6000546001600160a01b031633146101635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561041c57600080fd5b5035919050565b80356001600160a01b038116811461043a57600080fd5b919050565b6000806040838503121561045257600080fd5b61045b83610423565b946020939093013593505050565b60006020828403121561047b57600080fd5b61048482610423565b9392505050565b808201808211156104ac57634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156104c457600080fd5b8151801515811461048457600080fdfea26469706673582212205b7fbd8278514f40f2a5c0d41fff30c6b6ba2820f8fa4053024d533b38d1feb864736f6c634300081100330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122005b788e0a642b142df352ac654018c93c16de442977343ee2f529beeb53b3a7364736f6c63430008110033",
    "sourceMap": "402:608:11:-:0;;;1609:26:2;;;-1:-1:-1;;1609:26:2;1631:4;1609:26;;;642:4:11;613:33;;402:608;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001455760003560e01c806397754ae911620000bb578063c88a5e6d116200007a578063c88a5e6d14620002b9578063d06d822914620002d0578063d82555f114620002e7578063e9a79a7b14620002fe578063fa7626d4146200031557600080fd5b806397754ae914620002425780639a8325a01462000259578063af9bbe5f1462000270578063b9c071b41462000287578063ba414fa6146200029e57600080fd5b80632d6c17a311620001085780632d6c17a314620001cf5780633a76846314620001e65780633bf82db114620001fd5780636bce989b14620002145780636f597075146200022b57600080fd5b80630a9254e4146200014a578063108554f21462000156578063233240ee146200016d57806329a9e300146200018457806329ce9dde146200019b575b600080fd5b6200015462000323565b005b620001546200016736600462002504565b62000679565b620001546200017e36600462002533565b62000752565b62000154620001953660046200255a565b6200082e565b620001b2620001ac36600462002673565b620008e0565b6040516001600160a01b0390911681526020015b60405180910390f35b62000154620001e0366004620026f3565b62000999565b620001b2600080516020620069b883398151915281565b620001546200020e3660046200270d565b620009d9565b62000154620002253660046200270d565b62000abb565b620001546200023c36600462002533565b62000acf565b620001546200025336600462002762565b62000b79565b620001b26200026a366004620027bc565b62000dba565b62000154620002813660046200270d565b62000e4f565b6200015462000298366004620026f3565b62000efd565b620002a862000f1e565b6040519015158152602001620001c6565b62000154620002ca36600462002504565b6200104f565b62000154620002e13660046200255a565b62001085565b62000154620002f83660046200270d565b62001137565b620001546200030f36600462002504565b620011e8565b600054620002a89060ff1681565b604051620003319062002420565b604051809103906000f0801580156200034e573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216918217905560405163792e11f560e01b81526002600482015263792e11f5906024016000604051808303816000875af1158015620003ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003d5919081019062002824565b8051620003eb91600b916020909101906200242e565b50600b600081548110620004035762000403620028c9565b600091825260209091200154600c80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b815260048101929092526024820152600560448201526427bbb732b960d91b6064820152600080516020620069b88339815191529063c657c71890608401600060405180830381600087803b1580156200049257600080fd5b505af1158015620004a7573d6000803e3d6000fd5b50505050600b600181548110620004c257620004c2620028c9565b600091825260209091200154600d80546001600160a01b0319166001600160a01b039092169182179055604080516318caf8e360e31b81526004810192909252602482015260096044820152682232bb32b637b832b960b91b6064820152600080516020620069b88339815191529063c657c71890608401600060405180830381600087803b1580156200055557600080fd5b505af11580156200056a573d6000803e3d6000fd5b505050506040516200057c9062002498565b604051809103906000f08015801562000599573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b03929092169182179055604051620005c790620024a6565b6001600160a01b039091168152602001604051809103906000f080158015620005f4573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316908117909155600a54600e546040516340c10f1960e01b815291909316926340c10f19926200064392909190600401620028df565b600060405180830381600087803b1580156200065e57600080fd5b505af115801562000673573d6000803e3d6000fd5b50505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d90620006af9085908590600401620028df565b600060405180830381600087803b158015620006ca57600080fd5b505af1158015620006df573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620069b883398151915292506306447d5691506024015b600060405180830381600087803b1580156200073557600080fd5b505af11580156200074a573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d906200078c908490600160801b90600401620028df565b600060405180830381600087803b158015620007a757600080fd5b505af1158015620007bc573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620069b8833981519152925063ca669fa791506024015b600060405180830381600087803b1580156200081257600080fd5b505af115801562000827573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000868908590600160801b90600401620028df565b600060405180830381600087803b1580156200088357600080fd5b505af115801562000898573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620069b883398151915292506347e50cce91506044016200071a565b604051638d1cc92560e01b81526000908190600080516020620069b883398151915290638d1cc92590620009199087906004016200291e565b6000604051808303816000875af115801562000939573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000963919081019062002953565b8360405160200162000977929190620029d3565b60405160208183030381529060405290508051602082016000f0949350505050565b600080516020620069b883398151915263e5d6bf02620009ba834262002a1c565b6040518263ffffffff1660e01b8152600401620007f791815260200190565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000a0f9086908590600401620028df565b600060405180830381600087803b15801562000a2a57600080fd5b505af115801562000a3f573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620069b883398151915292506345b5607891506044015b600060405180830381600087803b15801562000a9d57600080fd5b505af115801562000ab2573d6000803e3d6000fd5b50505050505050565b62000aca838383600062000b79565b505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000b09908490600160801b90600401620028df565b600060405180830381600087803b15801562000b2457600080fd5b505af115801562000b39573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620069b883398151915292506306447d569150602401620007f7565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000bcf9162002a32565b6000604051808303816000865af19150503d806000811462000c0e576040519150601f19603f3d011682016040523d82523d6000602084013e62000c13565b606091505b5091505060008180602001905181019062000c2f919062002a50565b905062000ca18462000c9a8762000c716370a0823160e01b62000c5460018d6200128e565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90620012b3565b82156200074a5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000cec919062002a32565b6000604051808303816000865af19150503d806000811462000d2b576040519150601f19603f3d011682016040523d82523d6000602084013e62000d30565b606091505b5091505060008180602001905181019062000d4c919062002a50565b90508286101562000d775762000d63868462002a1c565b62000d6f908262002a1c565b905062000d92565b62000d83838762002a1c565b62000d8f908262002a6a565b90505b62000db08162000c9a6318160ddd60e01b62000c5460018d6200128e565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620069b883398151915290638d1cc9259062000df39086906004016200291e565b6000604051808303816000875af115801562000e13573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e3d919081019062002953565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d9062000e859086908590600401620028df565b600060405180830381600087803b15801562000ea057600080fd5b505af115801562000eb5573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620069b883398151915292506347e50cce915060440162000a82565b600080516020620069b883398151915263e5d6bf02620009ba834262002a6a565b60008054610100900460ff161562000f3f5750600054610100900460ff1690565b6000600080516020620069b88339815191523b156200104a57604051600090600080516020620069b8833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062000fac9083906519985a5b195960d21b90602001620028df565b60408051601f198184030181529082905262000fcc929160200162002a80565b60408051601f198184030181529082905262000fe89162002a32565b6000604051808303816000865af19150503d806000811462001027576040519150601f19603f3d011682016040523d82523d6000602084013e6200102c565b606091505b509150508080602001905181019062001046919062002ab3565b9150505b919050565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d906200071a9085908590600401620028df565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d90620010bf908590600160801b90600401620028df565b600060405180830381600087803b158015620010da57600080fd5b505af1158015620010ef573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620069b883398151915292506345b5607891506044016200071a565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051620011bd906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000aca8162000c9a8462000c716370a0823160e01b62000c5460018a6200128e565b60405163c88a5e6d60e01b8152600080516020620069b88339815191529063c88a5e6d906200121e9085908590600401620028df565b600060405180830381600087803b1580156200123957600080fd5b505af11580156200124e573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620069b8833981519152925063ca669fa791506024016200071a565b6005820180546001600160a01b0319166001600160a01b038316179055815b92915050565b620012bf8282620012c3565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200133657602002820191906000526020600020905b81548152602001906001019080831162001321575b505050505090506000836200134b8362001635565b6040516020016200135e92919062002a80565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620013b291869188910162002ad3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620013ed57620013eb87620016e9565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916200142e91879189910162002ad3565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b03168460405162001475919062002a32565b600060405180830381855afa9150503d8060008114620014b2576040519150601f19603f3d011682016040523d82523d6000602084013e620014b7565b606091505b509150620014d4905081620014ce88602062002b0f565b62002396565b604051630667f9d760e41b815290925060009150600080516020620069b88339815191529063667f9d709062001511908b908790600401620028df565b6020604051808303816000875af115801562001531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001557919062002a50565b9050808214620015845760405162461bcd60e51b81526004016200157b9062002b29565b60405180910390fd5b6040516370ca10bb60e01b8152600080516020620069b8833981519152906370ca10bb90620015bc908b9087908e9060040162002b9f565b600060405180830381600087803b158015620015d757600080fd5b505af1158015620015ec573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200162160028b016000620024b4565b896004016000905550505050505050505050565b606060008251602062001649919062002b0f565b67ffffffffffffffff81111562001664576200166462002598565b6040519080825280601f01601f1916602001820160405280156200168f576020820181803683370190505b50905060005b8351811015620016e2576000848281518110620016b657620016b6620028c9565b602002602001015190508082602002602001840152508080620016d99062002bc0565b91505062001695565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200175b57602002820191906000526020600020905b81548152602001906001019080831162001746575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620017a79250859187910162002ad3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff161562001846576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200181691859187910162002ad3565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620018548362001635565b6040516020016200186792919062002a80565b6040516020818303038152906040529050600080516020620069d883398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018c657600080fd5b505af1158015620018db573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620018fc919062002a32565b600060405180830381855afa9150503d806000811462001939576040519150601f19603f3d011682016040523d82523d6000602084013e6200193e565b606091505b50915062001955905081620014ce87602062002b0f565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620069b8833981519152906365bc9481906024016000604051808303816000875af1158015620019b2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620019dc919081019062002c49565b509050805160010362001ca5576000600080516020620069d883398151915260001c6001600160a01b031663667f9d70898460008151811062001a235762001a23620028c9565b60200260200101516040518363ffffffff1660e01b815260040162001a4a929190620028df565b6020604051808303816000875af115801562001a6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a90919062002a50565b90508062001af4577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062001ad05762001ad0620028c9565b602002602001015160001c60405162001aeb929190620028df565b60405180910390a15b80831462001b165760405162461bcd60e51b81526004016200157b9062002b29565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162001b4e92919062002ad3565b604051602081830303815290604052805190602001208560008151811062001b7a5762001b7a620028c9565b602002602001015160001c60405162001b97949392919062002caa565b60405180910390a18160008151811062001bb55762001bb5620028c9565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262001c00918a918c910162002ad3565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162001c6a918a918c910162002ad3565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062002246565b600181511115620021f25760005b8151811015620021eb576000600080516020620069d883398151915260001c6001600160a01b031663667f9d708a85858151811062001cf65762001cf6620028c9565b60200260200101516040518363ffffffff1660e01b815260040162001d1d929190620028df565b6020604051808303816000875af115801562001d3d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d63919062002a50565b90508062001dc6577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062001da25762001da2620028c9565b602002602001015160001c60405162001dbd929190620028df565b60405180910390a15b600080516020620069d883398151915260001c6001600160a01b03166370ca10bb8a85858151811062001dfd5762001dfd620028c9565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162001e2b9392919062002b9f565b600060405180830381600087803b15801562001e4657600080fd5b505af115801562001e5b573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162001e7d919062002a32565b600060405180830381855afa9150503d806000811462001eba576040519150601f19603f3d011682016040523d82523d6000602084013e62001ebf565b606091505b50909250905062001ed781620014ce8b602062002b0f565b955081801562001eeb575061133760f01b86145b156200213e577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162001f2992919062002ad3565b6040516020818303038152906040528051906020012088888151811062001f545762001f54620028c9565b602002602001015160001c60405162001f71949392919062002caa565b60405180910390a184848151811062001f8e5762001f8e620028c9565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262001fd9918d918f910162002ad3565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200206692919062002ad3565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620069d883398151915260001c6001600160a01b03166370ca10bb8c878781518110620020d857620020d8620028c9565b6020026020010151866040518463ffffffff1660e01b8152600401620021019392919062002b9f565b600060405180830381600087803b1580156200211c57600080fd5b505af115801562002131573d6000803e3d6000fd5b50505050505050620021eb565b600080516020620069d883398151915260001c6001600160a01b03166370ca10bb8c878781518110620021755762002175620028c9565b6020026020010151866040518463ffffffff1660e01b81526004016200219e9392919062002b9f565b600060405180830381600087803b158015620021b957600080fd5b505af1158015620021ce573d6000803e3d6000fd5b505050505050508080620021e29062002bc0565b91505062001cb3565b5062002246565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b60648201526084016200157b565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a168452825280832090519092916200228a9188918a910162002ad3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620022ec5760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b60448201526064016200157b565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200231d60028a016000620024b4565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620023639188918a910162002ad3565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b60008060006020855111620023ad578451620023b0565b60205b905060005b818110156200241657620023cb81600862002b0f565b86620023d8838862002a6a565b81518110620023eb57620023eb620028c9565b01602001516001600160f81b031916901c9290921791806200240d8162002bc0565b915050620023b5565b5090949350505050565b6129808062002cdb83390190565b82805482825590600052602060002090810192821562002486579160200282015b828111156200248657825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200244f565b5062002494929150620024d7565b5090565b610d62806200565b83390190565b6105fb80620063bd83390190565b5080546000825590600052602060002090810190620024d49190620024d7565b50565b5b80821115620024945760008155600101620024d8565b6001600160a01b0381168114620024d457600080fd5b600080604083850312156200251857600080fd5b82356200252581620024ee565b946020939093013593505050565b6000602082840312156200254657600080fd5b81356200255381620024ee565b9392505050565b600080604083850312156200256e57600080fd5b82356200257b81620024ee565b915060208301356200258d81620024ee565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620025da57620025da62002598565b604052919050565b600067ffffffffffffffff821115620025ff57620025ff62002598565b50601f01601f191660200190565b6000620026246200261e84620025e2565b620025ae565b90508281528383830111156200263957600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200266257600080fd5b62002553838335602085016200260d565b600080604083850312156200268757600080fd5b823567ffffffffffffffff80821115620026a057600080fd5b620026ae8683870162002650565b93506020850135915080821115620026c557600080fd5b508301601f81018513620026d857600080fd5b620026e9858235602084016200260d565b9150509250929050565b6000602082840312156200270657600080fd5b5035919050565b6000806000606084860312156200272357600080fd5b83356200273081620024ee565b925060208401356200274281620024ee565b929592945050506040919091013590565b8015158114620024d457600080fd5b600080600080608085870312156200277957600080fd5b84356200278681620024ee565b935060208501356200279881620024ee565b9250604085013591506060850135620027b18162002753565b939692955090935050565b600060208284031215620027cf57600080fd5b813567ffffffffffffffff811115620027e757600080fd5b620027f58482850162002650565b949350505050565b600067ffffffffffffffff8211156200281a576200281a62002598565b5060051b60200190565b600060208083850312156200283857600080fd5b825167ffffffffffffffff8111156200285057600080fd5b8301601f810185136200286257600080fd5b8051620028736200261e82620027fd565b81815260059190911b820183019083810190878311156200289357600080fd5b928401925b82841015620028be578351620028ae81620024ee565b8252928401929084019062002898565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03929092168252602082015260400190565b60005b8381101562002915578181015183820152602001620028fb565b50506000910152565b60208152600082518060208401526200293f816040850160208701620028f8565b601f01601f19169190910160400192915050565b6000602082840312156200296657600080fd5b815167ffffffffffffffff8111156200297e57600080fd5b8201601f810184136200299057600080fd5b8051620029a16200261e82620025e2565b818152856020838501011115620029b757600080fd5b620029ca826020830160208601620028f8565b95945050505050565b60008351620029e7818460208801620028f8565b835190830190620029fd818360208801620028f8565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115620012ad57620012ad62002a06565b6000825162002a46818460208701620028f8565b9190910192915050565b60006020828403121562002a6357600080fd5b5051919050565b80820180821115620012ad57620012ad62002a06565b6001600160e01b031983168152815160009062002aa5816004850160208701620028f8565b919091016004019392505050565b60006020828403121562002ac657600080fd5b8151620025538162002753565b825160009082906020808701845b8381101562002aff5781518552938201939082019060010162002ae1565b5050948252509092019392505050565b8082028115828204841417620012ad57620012ad62002a06565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b6001600160a01b039390931683526020830191909152604082015260600190565b60006001820162002bd55762002bd562002a06565b5060010190565b600082601f83011262002bee57600080fd5b8151602062002c016200261e83620027fd565b82815260059290921b8401810191818101908684111562002c2157600080fd5b8286015b8481101562002c3e578051835291830191830162002c25565b509695505050505050565b6000806040838503121562002c5d57600080fd5b825167ffffffffffffffff8082111562002c7657600080fd5b62002c848683870162002bdc565b9350602085015191508082111562002c9b57600080fd5b50620026e98582860162002bdc565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe6000805460ff191660011790556b75736572206164647265737360a01b60a052600c60805260ac6040527ffadd6953a0436e85528ded789af2e2b7e57c1cd7c68c5c3796d8ea67e0018db760085534801561005957600080fd5b50612917806100696000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639a8325a0116100b8578063c88a5e6d1161007c578063c88a5e6d146102c3578063d06d8229146102d6578063d82555f1146102e9578063e9a79a7b146102fc578063f82de7b01461030f578063fa7626d41461032257600080fd5b80639a8325a014610246578063af9bbe5f14610259578063b90a68fa1461026c578063b9c071b414610298578063ba414fa6146102ab57600080fd5b80633a7684631161010a5780633a768463146101c55780633bf82db1146101da5780636bce989b146101ed5780636f59707514610200578063792e11f51461021357806397754ae91461023357600080fd5b8063108554f214610147578063233240ee1461015c57806329a9e3001461016f57806329ce9dde146101825780632d6c17a3146101b2575b600080fd5b61015a61015536600461217b565b61032f565b005b61015a61016a3660046121a7565b610400565b61015a61017d3660046121cb565b6104d4565b6101956101903660046122d1565b61057f565b6040516001600160a01b0390911681526020015b60405180910390f35b61015a6101c0366004612349565b610630565b6101956000805160206128a283398151915281565b61015a6101e8366004612362565b61066c565b61015a6101fb366004612362565b610746565b61015a61020e3660046121a7565b610758565b610226610221366004612349565b6107fb565b6040516101a991906123a3565b61015a6102413660046123fe565b61096b565b610195610254366004612451565b610b8b565b61015a610267366004612362565b610c1a565b600880546040805160208082018490528251808303820181529183019092528051910120909155610195565b61015a6102a6366004612349565b610cc1565b6102b3610cdf565b60405190151581526020016101a9565b61015a6102d136600461217b565b610e02565b61015a6102e43660046121cb565b610e35565b61015a6102f7366004612362565b610ee0565b61015a61030a36600461217b565b610f8b565b61015a61031d366004612349565b61102a565b6000546102b39060ff1681565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610362908590859060040161248e565b600060405180830381600087803b15801561037c57600080fd5b505af1158015610390573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206128a283398151915292506306447d5691506024015b600060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610437908490600160801b9060040161248e565b600060405180830381600087803b15801561045157600080fd5b505af1158015610465573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03841660048201526000805160206128a2833981519152925063ca669fa791506024015b600060405180830381600087803b1580156104b957600080fd5b505af11580156104cd573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d9061050b908590600160801b9060040161248e565b600060405180830381600087803b15801561052557600080fd5b505af1158015610539573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206128a283398151915292506347e50cce91506044016103ca565b604051638d1cc92560e01b815260009081906000805160206128a283398151915290638d1cc925906105b59087906004016124cb565b6000604051808303816000875af11580156105d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105fc91908101906124fe565b8360405160200161060e929190612575565b60405160208183030381529060405290508051602082016000f0949350505050565b6000805160206128a283398151915263e5d6bf0261064e83426125ba565b6040518263ffffffff1660e01b815260040161049f91815260200190565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d9061069f908690859060040161248e565b600060405180830381600087803b1580156106b957600080fd5b505af11580156106cd573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206128a283398151915292506345b5607891506044015b600060405180830381600087803b15801561072957600080fd5b505af115801561073d573d6000803e3d6000fd5b50505050505050565b610753838383600061096b565b505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d9061078f908490600160801b9060040161248e565b600060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206128a283398151915292506306447d56915060240161049f565b606060008267ffffffffffffffff81111561081857610818612204565b604051908082528060200260200182016040528015610841578160200160208202803683370190505b50905060005b83811015610964576000306001600160a01b031663b90a68fa6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b591906125cd565b60405163c88a5e6d60e01b81529091506000805160206128a28339815191529063c88a5e6d906108f490849068056bc75e2d631000009060040161248e565b600060405180830381600087803b15801561090e57600080fd5b505af1158015610922573d6000803e3d6000fd5b5050505080838381518110610939576109396125ea565b6001600160a01b0390921660209283029190910190910152508061095c81612600565b915050610847565b5092915050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916109bf91612619565b6000604051808303816000865af19150503d80600081146109fc576040519150601f19603f3d011682016040523d82523d6000602084013e610a01565b606091505b50915050600081806020019051810190610a1b9190612635565b9050610a8784610a8187610a586370a0823160e01b610a3b60018d61106b565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b90611090565b82156103f85760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691610acf9190612619565b6000604051808303816000865af19150503d8060008114610b0c576040519150601f19603f3d011682016040523d82523d6000602084013e610b11565b606091505b50915050600081806020019051810190610b2b9190612635565b905082861015610b5057610b3f86846125ba565b610b4990826125ba565b9050610b67565b610b5a83876125ba565b610b64908261264e565b90505b610b8181610a816318160ddd60e01b610a3b60018d61106b565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206128a283398151915290638d1cc92590610bc19086906004016124cb565b6000604051808303816000875af1158015610be0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c0891908101906124fe565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610c4d908690859060040161248e565b600060405180830381600087803b158015610c6757600080fd5b505af1158015610c7b573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206128a283398151915292506347e50cce915060440161070f565b6000805160206128a283398151915263e5d6bf0261064e834261264e565b60008054610100900460ff1615610cff5750600054610100900460ff1690565b60006000805160206128a28339815191523b15610dfd576040516000906000805160206128a2833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490610d679083906519985a5b195960d21b9060200161248e565b60408051601f1981840301815290829052610d859291602001612661565b60408051601f1981840301815290829052610d9f91612619565b6000604051808303816000865af19150503d8060008114610ddc576040519150601f19603f3d011682016040523d82523d6000602084013e610de1565b606091505b5091505080806020019051810190610df99190612692565b9150505b919050565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d906103ca908590859060040161248e565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610e6c908590600160801b9060040161248e565b600060405180830381600087803b158015610e8657600080fd5b505af1158015610e9a573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206128a283398151915292506345b5607891506044016103ca565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a604051610f65906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a161075381610a8184610a586370a0823160e01b610a3b60018a61106b565b60405163c88a5e6d60e01b81526000805160206128a28339815191529063c88a5e6d90610fbe908590859060040161248e565b600060405180830381600087803b158015610fd857600080fd5b505af1158015610fec573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b03851660048201526000805160206128a2833981519152925063ca669fa791506024016103ca565b6000611036824361264e565b6040516301f7b4f360e41b8152600481018290529091506000805160206128a283398151915290631f7b4f30906024016103ca565b6005820180546001600160a01b0319166001600160a01b038316179055815b92915050565b61109a828261109e565b5050565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b946000939092909183018282801561110f57602002820191906000526020600020905b8154815260200190600101908083116110fb575b50505050509050600083611122836113eb565b604051602001611133929190612661565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916111859186918891016126af565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166111bd576111bb8761148b565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051909183916111fc9187918991016126af565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516112419190612619565b600060405180830381855afa9150503d806000811461127c576040519150601f19603f3d011682016040523d82523d6000602084013e611281565b606091505b50915061129a9050816112958860206126e9565b6120af565b604051630667f9d760e41b8152909250600091506000805160206128a28339815191529063667f9d70906112d4908b90879060040161248e565b6020604051808303816000875af11580156112f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113179190612635565b90508082146113415760405162461bcd60e51b815260040161133890612700565b60405180910390fd5b6040516370ca10bb60e01b81526000805160206128a2833981519152906370ca10bb90611376908b9087908e90600401612776565b600060405180830381600087803b15801561139057600080fd5b505af11580156113a4573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556113d760028b01600061212c565b896004016000905550505050505050505050565b60606000825160206113fd91906126e9565b67ffffffffffffffff81111561141557611415612204565b6040519080825280601f01601f19166020018201604052801561143f576020820181803683370190505b50905060005b8351811015610964576000848281518110611462576114626125ea565b60200260200101519050808260200260200184015250808061148390612600565b915050611445565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156114fb57602002820191906000526020600020905b8154815260200190600101908083116114e7575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350611545925085918791016126af565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16156115e1576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916115b19185918791016126af565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b6000836115ed836113eb565b6040516020016115fe929190612661565b60405160208183030381529060405290506000805160206128c283398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561165b57600080fd5b505af115801561166f573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405161168e9190612619565b600060405180830381855afa9150503d80600081146116c9576040519150601f19603f3d011682016040523d82523d6000602084013e6116ce565b606091505b5091506116e29050816112958760206126e9565b6040516365bc948160e01b81526001600160a01b0389166004820152909250600091506000805160206128a2833981519152906365bc9481906024016000604051808303816000875af115801561173d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117659190810190612817565b5090508051600103611a0c5760006000805160206128c283398151915260001c6001600160a01b031663667f9d7089846000815181106117a7576117a76125ea565b60200260200101516040518363ffffffff1660e01b81526004016117cc92919061248e565b6020604051808303816000875af11580156117eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180f9190612635565b90508061186d577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811061184b5761184b6125ea565b602002602001015160001c60405161186492919061248e565b60405180910390a15b80831461188c5760405162461bcd60e51b815260040161133890612700565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed888887896040516020016118c29291906126af565b60405160208183030381529060405280519060200120856000815181106118eb576118eb6125ea565b602002602001015160001c6040516119069493929190612871565b60405180910390a181600081518110611921576119216125ea565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909261196a918a918c91016126af565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c168552825282842092519093916119d2918a918c91016126af565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550611f67565b600181511115611f145760005b8151811015611f0e5760006000805160206128c283398151915260001c6001600160a01b031663667f9d708a858581518110611a5757611a576125ea565b60200260200101516040518363ffffffff1660e01b8152600401611a7c92919061248e565b6020604051808303816000875af1158015611a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abf9190612635565b905080611b1c577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a589848481518110611afa57611afa6125ea565b602002602001015160001c604051611b1392919061248e565b60405180910390a15b6000805160206128c283398151915260001c6001600160a01b03166370ca10bb8a858581518110611b4f57611b4f6125ea565b602002602001015161133760f01b6040518463ffffffff1660e01b8152600401611b7b93929190612776565b600060405180830381600087803b158015611b9557600080fd5b505af1158015611ba9573d6000803e3d6000fd5b50505050600060608a6001600160a01b031687604051611bc99190612619565b600060405180830381855afa9150503d8060008114611c04576040519150601f19603f3d011682016040523d82523d6000602084013e611c09565b606091505b509092509050611c1e816112958b60206126e9565b9550818015611c31575061133760f01b86145b15611e6c577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001611c6c9291906126af565b60405160208183030381529060405280519060200120888881518110611c9457611c946125ea565b602002602001015160001c604051611caf9493929190612871565b60405180910390a1848481518110611cc957611cc96125ea565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f1683528452808220905192939092611d12918d918f91016126af565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001611d9d9291906126af565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206128c283398151915260001c6001600160a01b03166370ca10bb8c878781518110611e0b57611e0b6125ea565b6020026020010151866040518463ffffffff1660e01b8152600401611e3293929190612776565b600060405180830381600087803b158015611e4c57600080fd5b505af1158015611e60573d6000803e3d6000fd5b50505050505050611f0e565b6000805160206128c283398151915260001c6001600160a01b03166370ca10bb8c878781518110611e9f57611e9f6125ea565b6020026020010151866040518463ffffffff1660e01b8152600401611ec693929190612776565b600060405180830381600087803b158015611ee057600080fd5b505af1158015611ef4573d6000803e3d6000fd5b505050505050508080611f0690612600565b915050611a19565b50611f67565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b6064820152608401611338565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291611fa99188918a91016126af565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166120095760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b6044820152606401611338565b6005890180546001600160a01b031916905560038901805463ffffffff1916905561203860028a01600061212c565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a1684528252808320905190929161207c9188918a91016126af565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116120c45784516120c7565b60205b905060005b81811015612122576120df8160086126e9565b866120ea838861264e565b815181106120fa576120fa6125ea565b01602001516001600160f81b031916901c92909217918061211a81612600565b9150506120cc565b5090949350505050565b508054600082559060005260206000209081019061214a919061214d565b50565b5b80821115612162576000815560010161214e565b5090565b6001600160a01b038116811461214a57600080fd5b6000806040838503121561218e57600080fd5b823561219981612166565b946020939093013593505050565b6000602082840312156121b957600080fd5b81356121c481612166565b9392505050565b600080604083850312156121de57600080fd5b82356121e981612166565b915060208301356121f981612166565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561224357612243612204565b604052919050565b600067ffffffffffffffff82111561226557612265612204565b50601f01601f191660200190565b60006122866122818461224b565b61221a565b905082815283838301111561229a57600080fd5b828260208301376000602084830101529392505050565b600082601f8301126122c257600080fd5b6121c483833560208501612273565b600080604083850312156122e457600080fd5b823567ffffffffffffffff808211156122fc57600080fd5b612308868387016122b1565b9350602085013591508082111561231e57600080fd5b508301601f8101851361233057600080fd5b61233f85823560208401612273565b9150509250929050565b60006020828403121561235b57600080fd5b5035919050565b60008060006060848603121561237757600080fd5b833561238281612166565b9250602084013561239281612166565b929592945050506040919091013590565b6020808252825182820181905260009190848201906040850190845b818110156123e45783516001600160a01b0316835292840192918401916001016123bf565b50909695505050505050565b801515811461214a57600080fd5b6000806000806080858703121561241457600080fd5b843561241f81612166565b9350602085013561242f81612166565b9250604085013591506060850135612446816123f0565b939692955090935050565b60006020828403121561246357600080fd5b813567ffffffffffffffff81111561247a57600080fd5b612486848285016122b1565b949350505050565b6001600160a01b03929092168252602082015260400190565b60005b838110156124c25781810151838201526020016124aa565b50506000910152565b60208152600082518060208401526124ea8160408501602087016124a7565b601f01601f19169190910160400192915050565b60006020828403121561251057600080fd5b815167ffffffffffffffff81111561252757600080fd5b8201601f8101841361253857600080fd5b80516125466122818261224b565b81815285602083850101111561255b57600080fd5b61256c8260208301602086016124a7565b95945050505050565b600083516125878184602088016124a7565b83519083019061259b8183602088016124a7565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561108a5761108a6125a4565b6000602082840312156125df57600080fd5b81516121c481612166565b634e487b7160e01b600052603260045260246000fd5b600060018201612612576126126125a4565b5060010190565b6000825161262b8184602087016124a7565b9190910192915050565b60006020828403121561264757600080fd5b5051919050565b8082018082111561108a5761108a6125a4565b6001600160e01b03198316815281516000906126848160048501602087016124a7565b919091016004019392505050565b6000602082840312156126a457600080fd5b81516121c4816123f0565b825160009082906020808701845b838110156126d9578151855293820193908201906001016126bd565b5050948252509092019392505050565b808202811582820484141761108a5761108a6125a4565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b6001600160a01b039390931683526020830191909152604082015260600190565b600082601f8301126127a857600080fd5b8151602067ffffffffffffffff8211156127c4576127c4612204565b8160051b6127d382820161221a565b92835284810182019282810190878511156127ed57600080fd5b83870192505b8483101561280c578251825291830191908301906127f3565b979650505050505050565b6000806040838503121561282a57600080fd5b825167ffffffffffffffff8082111561284257600080fd5b61284e86838701612797565b9350602085015191508082111561286457600080fd5b5061233f85828601612797565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122038c8173902000acb5693571905bd5259b3ca0b684e2b3ce6eae05f2f8ffd2dc464736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600a81526020016926b7b1b5902a37b5b2b760b11b815250604051806040016040528060038152602001624d544b60e81b81525081600390816200006291906200018f565b5060046200007182826200018f565b5050506200008e620000886200009460201b60201c565b62000098565b6200025b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011557607f821691505b6020821081036200013657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018a57600081815260208120601f850160051c81016020861015620001655750805b601f850160051c820191505b81811015620001865782815560010162000171565b5050505b505050565b81516001600160401b03811115620001ab57620001ab620000ea565b620001c381620001bc845462000100565b846200013c565b602080601f831160018114620001fb5760008415620001e25750858301515b600019600386901b1c1916600185901b17855562000186565b600085815260208120601f198616915b828110156200022c578886015182559484019460019091019084016200020b565b50858210156200024b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610af7806200026b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101eb578063a9059cbb146101fe578063dd62ed3e14610211578063f2fde38b1461022457600080fd5b806370a0823114610197578063715018a6146101c05780638da5cb5b146101c857806395d89b41146101e357600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461016f57806340c10f191461018257600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610237565b60405161010f9190610941565b60405180910390f35b61012b6101263660046109ab565b6102c9565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b3660046109d5565b6102e3565b6040516012815260200161010f565b61012b61017d3660046109ab565b610307565b6101956101903660046109ab565b610329565b005b61013f6101a5366004610a11565b6001600160a01b031660009081526020819052604090205490565b61019561033f565b6005546040516001600160a01b03909116815260200161010f565b610102610353565b61012b6101f93660046109ab565b610362565b61012b61020c3660046109ab565b6103e2565b61013f61021f366004610a33565b6103f0565b610195610232366004610a11565b61041b565b60606003805461024690610a66565b80601f016020809104026020016040519081016040528092919081815260200182805461027290610a66565b80156102bf5780601f10610294576101008083540402835291602001916102bf565b820191906000526020600020905b8154815290600101906020018083116102a257829003601f168201915b5050505050905090565b6000336102d7818585610494565b60019150505b92915050565b6000336102f18582856105b8565b6102fc858585610632565b506001949350505050565b6000336102d781858561031a83836103f0565b6103249190610aa0565b610494565b6103316107d6565b61033b8282610830565b5050565b6103476107d6565b61035160006108ef565b565b60606004805461024690610a66565b6000338161037082866103f0565b9050838110156103d55760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102fc8286868403610494565b6000336102d7818585610632565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104236107d6565b6001600160a01b0381166104885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cc565b610491816108ef565b50565b6001600160a01b0383166104f65760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cc565b6001600160a01b0382166105575760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105c484846103f0565b9050600019811461062c578181101561061f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103cc565b61062c8484848403610494565b50505050565b6001600160a01b0383166106965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cc565b6001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cc565b6001600160a01b038316600090815260208190526040902054818110156107705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cc565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361062c565b6005546001600160a01b031633146103515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103cc565b6001600160a01b0382166108865760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cc565b80600260008282546108989190610aa0565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b8181101561096e57858101830151858201604001528201610952565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146109a657600080fd5b919050565b600080604083850312156109be57600080fd5b6109c78361098f565b946020939093013593505050565b6000806000606084860312156109ea57600080fd5b6109f38461098f565b9250610a016020850161098f565b9150604084013590509250925092565b600060208284031215610a2357600080fd5b610a2c8261098f565b9392505050565b60008060408385031215610a4657600080fd5b610a4f8361098f565b9150610a5d6020840161098f565b90509250929050565b600181811c90821680610a7a57607f821691505b602082108103610a9a57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102dd57634e487b7160e01b600052601160045260246000fdfea2646970667358221220e333e8ac3938549a4fcd440e15044136577de9c57f85101b445a7639b2865a5264736f6c634300081100336080604052606460035534801561001557600080fd5b506040516105fb3803806105fb833981016040819052610034916100b2565b61003d33610062565b600180546001600160a01b0319166001600160a01b03929092169190911790556100e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c457600080fd5b81516001600160a01b03811681146100db57600080fd5b9392505050565b61050a806100f16000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a4d66daf1161005b578063a4d66daf146100e7578063e9439b13146100fe578063f2fde38b1461011e578063fc0c546a1461013157600080fd5b806327ea6f2b1461008d578063715018a6146100a25780638da5cb5b146100aa5780639e353a1e146100d4575b600080fd5b6100a061009b36600461040a565b610144565b005b6100a0610151565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100e236600461043f565b610165565b6100f060035481565b6040519081526020016100cb565b6100f061010c366004610469565b60026020526000908152604090205481565b6100a061012c366004610469565b6102e7565b6001546100b7906001600160a01b031681565b61014c610360565b600355565b610159610360565b61016360006103ba565b565b6001600160a01b0382166101b45760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064015b60405180910390fd5b6003548111156101f65760405162461bcd60e51b815260206004820152600d60248201526c115610d1515114d7d312535255609a1b60448201526064016101ab565b6001600160a01b03821660009081526002602052604090205442101561024a5760405162461bcd60e51b81526020600482015260096024820152682a292cafa620aa22a960b91b60448201526064016101ab565b6102564261012c61048b565b6001600160a01b038381166000818152600260205260409081902093909355600154925163a9059cbb60e01b815260048101919091526024810184905291169063a9059cbb906044016020604051808303816000875af11580156102be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e291906104b2565b505050565b6102ef610360565b6001600160a01b0381166103545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101ab565b61035d816103ba565b50565b6000546001600160a01b031633146101635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561041c57600080fd5b5035919050565b80356001600160a01b038116811461043a57600080fd5b919050565b6000806040838503121561045257600080fd5b61045b83610423565b946020939093013593505050565b60006020828403121561047b57600080fd5b61048482610423565b9392505050565b808201808211156104ac57634e487b7160e01b600052601160045260246000fd5b92915050565b6000602082840312156104c457600080fd5b8151801515811461048457600080fdfea26469706673582212205b7fbd8278514f40f2a5c0d41fff30c6b6ba2820f8fa4053024d533b38d1feb864736f6c634300081100330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122005b788e0a642b142df352ac654018c93c16de442977343ee2f529beeb53b3a7364736f6c63430008110033",
    "sourceMap": "402:608:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:353;;;:::i;:::-;;1403:119:3;;;;;;:::i;:::-;;:::i;724:99::-;;;;;;:::i;:::-;;:::i;948:123::-;;;;;;:::i;:::-;;:::i;3811:295::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3129:32:14;;;3111:51;;3099:2;3084:18;3811:295:3;;;;;;;;571:87;;;;;;:::i;:::-;;:::i;323:40::-;;-1:-1:-1;;;;;;;;;;;323:40:3;;1786:143;;;;;;:::i;:::-;;:::i;2588:109::-;;;;;;:::i;:::-;;:::i;1286:::-;;;;;;:::i;:::-;;:::i;2705:941::-;;;;;;:::i;:::-;;:::i;4114:252::-;;;;;;:::i;:::-;;:::i;1079:133::-;;;;;;:::i;:::-;;:::i;478:85::-;;;;;;:::i;:::-;;:::i;1865:600:2:-;;;:::i;:::-;;;5250:14:14;;5243:22;5225:41;;5213:2;5198:18;1865:600:2;5085:187:14;2377:83:3;;;;;;:::i;:::-;;:::i;1645:133::-;;;;;;:::i;:::-;;:::i;1976:304::-;;;;;;:::i;:::-;;:::i;831:109::-;;;;;;:::i;:::-;;:::i;1609:26:2:-;;;;;;;;;654:353:11;704:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;696:5:11;:19;;-1:-1:-1;;;;;;696:19:11;-1:-1:-1;;;;;696:19:11;;;;;;;;;733:20;;-1:-1:-1;;;733:20:11;;751:1;733:20;;;5431:25:14;733:17:11;;5404:18:14;;733:20:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;733:20:11;;;;;;;;;;;;:::i;:::-;725:28;;;;:5;;:28;;;;;;:::i;:::-;;771:5;777:1;771:8;;;;;;;;:::i;:::-;;;;;;;;;;;763:5;:16;;-1:-1:-1;;;;;;763:16:11;-1:-1:-1;;;;;771:8:11;;;763:16;;;;;789:24;;;-1:-1:-1;;;789:24:11;;;;;6984:51:14;;;;7051:18;;;7044:30;7110:1;7090:18;;;7083:29;-1:-1:-1;;;7128:18:14;;;7121:35;-1:-1:-1;;;;;;;;;;;1712:64:2;789:8:11;;7173:19:14;;789:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;829:5;835:1;829:8;;;;;;;;:::i;:::-;;;;;;;;;;;823:3;:14;;-1:-1:-1;;;;;;823:14:11;-1:-1:-1;;;;;829:8:11;;;823:14;;;;;847:26;;;-1:-1:-1;;;847:26:11;;;;;7415:51:14;;;;7482:18;;;7475:30;7541:1;7521:18;;;7514:29;-1:-1:-1;;;7559:18:14;;;7552:39;-1:-1:-1;;;;;;;;;;;1712:64:2;847:8:11;;7608:19:14;;847:26:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;893:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;885:5:11;:23;;-1:-1:-1;;;;;;885:23:11;-1:-1:-1;;;;;885:23:11;;;;;;;;;927:25;;;;;:::i;:::-;-1:-1:-1;;;;;3129:32:14;;;3111:51;;3099:2;3084:18;927:25:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;918:6:11;:34;;-1:-1:-1;;;;;;918:34:11;-1:-1:-1;;;;;918:34:11;;;;;;;;;962:5;;990:9;;962:38;;-1:-1:-1;;;962:38:11;;:5;;;;;:10;;:38;;918:34;;990:9;962:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;654:353::o;1403:119:3:-;1467:18;;-1:-1:-1;;;1467:18:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;1467:7:3;;:18;;1475:3;;1480:4;;1467:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1496:18:3;;-1:-1:-1;;;1496:18:3;;-1:-1:-1;;;;;3129:32:14;;1496:18:3;;;3111:51:14;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;1496:13:3;;-1:-1:-1;3084:18:14;;1496::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:119;;:::o;724:99::-;769:22;;-1:-1:-1;;;769:22:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;769:7:3;;:22;;777:3;;-1:-1:-1;;;782:8:3;769:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;802:13:3;;-1:-1:-1;;;802:13:3;;-1:-1:-1;;;;;3129:32:14;;802:13:3;;;3111:51:14;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;802:8:3;;-1:-1:-1;3084:18:14;;802:13:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;724:99;:::o;948:123::-;1009:22;;-1:-1:-1;;;1009:22:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;1009:7:3;;:22;;1017:3;;-1:-1:-1;;;1022:8:3;1009:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1042:21:3;;-1:-1:-1;;;1042:21:3;;-1:-1:-1;;;;;8696:15:14;;;1042:21:3;;;8678:34:14;8748:15;;8728:18;;;8721:43;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;1042:8:3;;-1:-1:-1;8613:18:14;;1042:21:3;8466:304:14;3811:295:3;3975:16;;-1:-1:-1;;;3975:16:3;;3904:12;;;;-1:-1:-1;;;;;;;;;;;1712:64:2;3975:10:3;;:16;;3986:4;;3975:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3975:16:3;;;;;;;;;;;;:::i;:::-;3993:4;3958:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3934:64;;4078:8;4072:15;4065:4;4055:8;4051:19;4048:1;4041:47;4033:55;3811:295;-1:-1:-1;;;;3811:295:3:o;571:87::-;-1:-1:-1;;;;;;;;;;;619:7:3;627:22;645:4;627:15;:22;:::i;:::-;619:31;;;;;;;;;;;;;5431:25:14;;5419:2;5404:18;;5277:185;1786:143:3;1866:18;;-1:-1:-1;;;1866:18:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;1866:7:3;;:18;;1874:3;;1879:4;;1866:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1895:26:3;;-1:-1:-1;;;1895:26:3;;-1:-1:-1;;;;;8696:15:14;;;1895:26:3;;;8678:34:14;8748:15;;8728:18;;;8721:43;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;1895:13:3;;-1:-1:-1;8613:18:14;;1895:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:143;;;:::o;2588:109::-;2661:28;2666:5;2673:2;2677:4;2683:5;2661:4;:28::i;:::-;2588:109;;;:::o;1286:::-;1336:22;;-1:-1:-1;;;1336:22:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;1336:7:3;;:22;;1344:3;;-1:-1:-1;;;1349:8:3;1336:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1369:18:3;;-1:-1:-1;;;1369:18:3;;-1:-1:-1;;;;;3129:32:14;;1369:18:3;;;3111:51:14;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;1369:13:3;;-1:-1:-1;3084:18:14;;1369::3;2965:203:14;2705:941:3;2861:38;;;-1:-1:-1;;;;;3129:32:14;;;2861:38:3;;;;3111:51:14;;;;2861:38:3;;;;;;;;;;3084:18:14;;;;2861:38:3;;;;;;;-1:-1:-1;;;;;2861:38:3;-1:-1:-1;;;2861:38:3;;;2850:50;;2826:20;;2850:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2823:77;;;2911:15;2940:7;2929:30;;;;;;;;;;;;:::i;:::-;2911:48;-1:-1:-1;2999:127:3;3121:4;2999:93;3089:2;2999:66;-1:-1:-1;;;2999:36:3;:8;3029:5;2999:29;:36::i;:::-;:54;10123:9;;;:16;;-1:-1:-1;;10123:16:3;;;;;;;;;;;;:9;10023:146;2999:66;:89;10449:10;;;:47;;;;;;;-1:-1:-1;10449:47:3;;;;;;;-1:-1:-1;;;;;10473:21:3;;;;10449:47;;;:10;10344:182;2999:93;:121;;:127::i;:::-;3174:6;3171:468;;;3237:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3237:34:3;-1:-1:-1;;;3237:34:3;;;3226:46;;3199:23;;-1:-1:-1;;;;;3226:10:3;;;:46;;3237:34;3226:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:76;;;3287:14;3315:10;3304:33;;;;;;;;;;;;:::i;:::-;3287:50;;3362:7;3355:4;:14;3352:147;;;3401:14;3411:4;3401:7;:14;:::i;:::-;3390:26;;;;:::i;:::-;;;3352:147;;;3468:14;3475:7;3468:4;:14;:::i;:::-;3457:26;;;;:::i;:::-;;;3352:147;3513:114;3620:6;3513:74;-1:-1:-1;;;3513:40:3;:8;3547:5;3513:33;:40::i;:114::-;3181:458;;2780:866;;2705:941;;;;:::o;4114:252::-;4242:16;;-1:-1:-1;;;4242:16:3;;4188:12;;;;-1:-1:-1;;;;;;;;;;;1712:64:2;4242:10:3;;:16;;4253:4;;4242:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4242:16:3;;;;;;;;;;;;:::i;:::-;4218:40;;4338:8;4332:15;4325:4;4315:8;4311:19;4308:1;4301:47;4293:55;4114:252;-1:-1:-1;;;4114:252:3:o;1079:133::-;1154:18;;-1:-1:-1;;;1154:18:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;1154:7:3;;:18;;1162:3;;1167:4;;1154:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1183:21:3;;-1:-1:-1;;;1183:21:3;;-1:-1:-1;;;;;8696:15:14;;;1183:21:3;;;8678:34:14;8748:15;;8728:18;;;8721:43;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;1183:8:3;;-1:-1:-1;8613:18:14;;1183:21:3;8466:304:14;478:85:3;-1:-1:-1;;;;;;;;;;;524:7:3;532:22;550:4;532:15;:22;:::i;1865:600:2:-;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:2;;;;;;;;1865:600::o;1916:542::-;1991:17;-1:-1:-1;;;;;;;;;;;3058:55:2;3141:16;2031:382;;2251:43;;2075:20;;-1:-1:-1;;;;;;;;;;;1712:64:2;2189:34;;2251:43;;1712:64;;-1:-1:-1;;;2276:17:2;2251:43;;;:::i;:::-;;;;-1:-1:-1;;2251:43:2;;;;;;;;;;2139:178;;;2251:43;2139:178;;:::i;:::-;;;;-1:-1:-1;;2139:178:2;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:2:o;2377:83:3:-;2435:17;;-1:-1:-1;;;2435:17:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;2435:7:3;;:17;;2443:2;;2447:4;;2435:17;;;:::i;1645:133::-;1711:22;;-1:-1:-1;;;1711:22:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;1711:7:3;;:22;;1719:3;;-1:-1:-1;;;1724:8:3;1711:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1744:26:3;;-1:-1:-1;;;1744:26:3;;-1:-1:-1;;;;;8696:15:14;;;1744:26:3;;;8678:34:14;8748:15;;8728:18;;;8721:43;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;1744:13:3;;-1:-1:-1;8613:18:14;;1744:26:3;8466:304:14;1976::3;2053:81;;;;;12759:2:14;12741:21;;;12798:2;12778:18;;;12771:30;12837:34;12832:2;12817:18;;12810:62;12908:29;12903:2;12888:18;;12881:57;12970:3;12955:19;;12557:423;2053:81:3;;;;;;;;2145:127;2267:4;2145:93;2235:2;2145:66;-1:-1:-1;;;2145:36:3;:8;2175:5;2145:29;:36::i;831:109::-;890:18;;-1:-1:-1;;;890:18:3;;-1:-1:-1;;;;;;;;;;;1712:64:2;890:7:3;;:18;;898:3;;903:4;;890:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;919:13:3;;-1:-1:-1;;;919:13:3;;-1:-1:-1;;;;;3129:32:14;;919:13:3;;;3111:51:14;-1:-1:-1;;;;;;;;;;;1712:64:2;-1:-1:-1;919:8:3;;-1:-1:-1;3084:18:14;;919:13:3;2965:203:14;9856:159:3;9963:12;;;:22;;-1:-1:-1;;;;;;9963:22:3;-1:-1:-1;;;;;9963:22:3;;;;;:12;9856:159;;;;;:::o;11178:122::-;11259:33;11273:4;11287:3;11259:13;:33::i;:::-;11178:122;;:::o;11501:1089::-;11621:12;;;;11658:9;;;;11700:11;;;;11745:10;;;11722:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11621:12:3;;;;11658:9;;;;;;11607:11;;11722:33;;11745:10;;11722:33;;11745:10;11722:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11768:17;11805:4;11811:12;11819:3;11811:7;:12::i;:::-;11788:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11788:36:3;;;;;;;;;-1:-1:-1;;;;;11840:15:3;;;;;;:10;;;11788:36;11840:15;;;;;;-1:-1:-1;;;;;;11840:21:3;;;;;;;;;11788:36;;-1:-1:-1;11840:21:3;;:15;;11872:34;;11889:3;;11894:11;;11872:34;;:::i;:::-;;;;-1:-1:-1;;11872:34:3;;;;;;;;;11862:45;;11872:34;11862:45;;;;11840:68;;;;;;;;;;-1:-1:-1;11840:68:3;;;;11835:112;;11925:10;11930:4;11925;:10::i;:::-;;11835:112;-1:-1:-1;;;;;11980:15:3;;11957:12;11980:15;;;;;;;;;;;-1:-1:-1;;;;;;11980:21:3;;;;;;;;;12012:34;;11980:21;;11957:12;;12012:34;;12029:3;;12034:11;;12012:34;;:::i;:::-;;;;;;;;;;;;;12002:45;;;;;;11980:68;;;;;;;;;;;;11972:77;;11957:92;;12062:12;12103:17;12124:3;-1:-1:-1;;;;;12124:14:3;12139:4;12124:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12100:44:3;-1:-1:-1;12166:36:3;;-1:-1:-1;12100:44:3;12187:14;12190:11;12187:2;:14;:::i;:::-;12166;:36::i;:::-;12239:28;;-1:-1:-1;;;12239:28:3;;12159:43;;-1:-1:-1;12224:12:3;;-1:-1:-1;;;;;;;;;;;;12239:17:3;;;:28;;12257:3;;12262:4;;12239:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12224:43;;12292:4;12284;:12;12280:143;;12313:98;;-1:-1:-1;;;12313:98:3;;;;;;;:::i;:::-;;;;;;;;;12433:34;;-1:-1:-1;;;12433:34:3;;-1:-1:-1;;;;;;;;;;;12433:18:3;;;:34;;12452:3;;12457:4;;12463:3;;12433:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12485:12:3;;;12478:19;;-1:-1:-1;;;;;;12478:19:3;;;-1:-1:-1;12515:9:3;;;12508:16;;-1:-1:-1;;12508:16:3;;;12535:17;-1:-1:-1;12542:10:3;;12485:12;12535:17;:::i;:::-;12570:4;:11;;12563:18;;;11596:994;;;;;;;;11501:1089;;:::o;12911:361::-;12970:12;13000:19;13032:1;:8;13043:2;13032:13;;;;:::i;:::-;13022:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13022:24:3;;13000:46;;13062:9;13057:182;13081:1;:8;13077:1;:12;13057:182;;;13111:9;13123:1;13125;13123:4;;;;;;;;:::i;:::-;;;;;;;13111:16;;13211:1;13205;13201:2;13197:10;13193:2;13189:19;13181:6;13177:32;13170:43;13151:77;13091:3;;;;;:::i;:::-;;;;13057:182;;;-1:-1:-1;13258:6:3;12911:361;-1:-1:-1;;12911:361:3:o;6635:3213::-;6767:12;;;;6804:9;;;;6846:11;;;;6891:10;;;6868:33;;;;;;;;;;;;;;;;;;;6728:7;;-1:-1:-1;;;;;6767:12:3;;6804:9;;;6846:11;6728:7;;6868:33;;6891:10;;6868:33;;;6891:10;6868:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;6955:15:3;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;6955:21:3;;;;;;;;;6987:34;;6868:33;;-1:-1:-1;6955:21:3;:15;;-1:-1:-1;6987:34:3;;-1:-1:-1;6868:33:3;;7009:11;;6987:34;;:::i;:::-;;;;-1:-1:-1;;6987:34:3;;;;;;;;;6977:45;;6987:34;6977:45;;;;6955:68;;;;;;;;;;-1:-1:-1;6955:68:3;;;;6951:176;;;-1:-1:-1;;;;;7047:15:3;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;7047:21:3;;;;;;;;;7079:34;;7047:21;;:10;7079:34;;7096:3;;7101:11;;7079:34;;:::i;:::-;;;;;;;;;;;;;7069:45;;;;;;7047:68;;;;;;;;;;;;7040:75;;;;;;6635:3213;;;:::o;6951:176::-;7137:17;7174:4;7180:12;7188:3;7180:7;:12::i;:::-;7157:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7137:56;;-1:-1:-1;;;;;;;;;;;5891:37:3;;-1:-1:-1;;;;;7204:19:3;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7236:12;7277:17;7298:3;-1:-1:-1;;;;;7298:14:3;7313:4;7298:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7274:44:3;-1:-1:-1;7340:36:3;;-1:-1:-1;7274:44:3;7361:14;7364:11;7361:2;:14;:::i;7340:36::-;7437:35;;-1:-1:-1;;;7437:35:3;;-1:-1:-1;;;;;3129:32:14;;7437:35:3;;;3111:51:14;7333:43:3;;-1:-1:-1;7409:22:3;;-1:-1:-1;;;;;;;;;;;;7437:21:3;;;3084:18:14;;7437:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7437:35:3;;;;;;;;;;;;:::i;:::-;7408:64;;;7487:5;:12;7503:1;7487:17;7483:2051;;7521:12;-1:-1:-1;;;;;;;;;;;5891:37:3;;-1:-1:-1;;;;;7536:17:3;;7554:3;7559:5;7565:1;7559:8;;;;;;;;:::i;:::-;;;;;;;7536:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7521:47;-1:-1:-1;7521:47:3;7583:108;;7631:44;7652:3;7665:5;7671:1;7665:8;;;;;;;;:::i;:::-;;;;;;;7657:17;;7631:44;;;;;;;:::i;:::-;;;;;;;;7583:108;7717:4;7709;:12;7705:151;;7742:98;;-1:-1:-1;;;7742:98:3;;;;;;;:::i;:::-;7875:86;7885:3;7890:4;7923:3;7928:11;7906:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7896:45;;;;;;7951:5;7957:1;7951:8;;;;;;;;:::i;:::-;;;;;;;7943:17;;7875:86;;;;;;;;;:::i;:::-;;;;;;;;8055:5;8061:1;8055:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7976:15:3;;8047:17;7976:15;;;;;;;;;;-1:-1:-1;;;;;;7976:21:3;;;;;;;;;8008:34;;8055:8;;7976:21;;8008:34;;8025:3;;8030:11;;8008:34;;:::i;:::-;;;;-1:-1:-1;;8008:34:3;;;;;;;;;7998:45;;8008:34;7998:45;;;;7976:68;;;;;;;;;;;;-1:-1:-1;7976:68:3;;;:88;;;;-1:-1:-1;;;;;8079:15:3;;;;8150:4;8079:10;;;:15;;;;;-1:-1:-1;;;;;;8079:21:3;;;;;;;;;8111:34;;8150:4;;-1:-1:-1;8111:34:3;;8128:3;;8133:11;;8111:34;;:::i;:::-;;;;;;;-1:-1:-1;;8111:34:3;;;;;;8101:45;;8111:34;8101:45;;;;8079:68;;;;;;;;;;-1:-1:-1;8079:68:3;:75;;-1:-1:-1;;8079:75:3;;;;;;;;;;-1:-1:-1;7483:2051:3;;;8191:1;8176:5;:12;:16;8172:1362;;;8214:9;8209:1229;8233:5;:12;8229:1;:16;8209:1229;;;8271:12;-1:-1:-1;;;;;;;;;;;5891:37:3;;-1:-1:-1;;;;;8286:17:3;;8304:3;8309:5;8315:1;8309:8;;;;;;;;:::i;:::-;;;;;;;8286:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8271:47;-1:-1:-1;8271:47:3;8337:116;;8389:44;8410:3;8423:5;8429:1;8423:8;;;;;;;;:::i;:::-;;;;;;;8415:17;;8389:44;;;;;;;:::i;:::-;;;;;;;;8337:116;-1:-1:-1;;;;;;;;;;;5891:37:3;;-1:-1:-1;;;;;8497:18:3;;8516:3;8521:5;8527:1;8521:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;8497:53:3;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8569:12;8600:17;8677:3;-1:-1:-1;;;;;8677:14:3;8692:4;8677:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8659:38:3;;-1:-1:-1;8659:38:3;-1:-1:-1;8727:36:3;8659:38;8748:14;8751:11;8748:2;:14;:::i;8727:36::-;8720:43;;8823:7;:37;;;;;-1:-1:-1;;;8834:4:3;:26;8823:37;8819:546;;;8960:86;8970:3;8975:4;9008:3;9013:11;8991:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8981:45;;;;;;9036:5;9042:1;9036:8;;;;;;;;:::i;:::-;;;;;;;9028:17;;8960:86;;;;;;;;;:::i;:::-;;;;;;;;9148:5;9154:1;9148:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;9069:15:3;;9140:17;9069:15;;;;;;;;;;-1:-1:-1;;;;;;9069:21:3;;;;;;;;;9101:34;;9148:8;;9069:21;;9101:34;;9118:3;;9123:11;;9101:34;;:::i;:::-;;;;;;;;;;;;;9091:45;;;;;;9069:68;;;;;;;;;;;:88;;;;9251:4;9180;:10;;:15;9191:3;-1:-1:-1;;;;;9180:15:3;-1:-1:-1;;;;;9180:15:3;;;;;;;;;;;;:21;9196:4;-1:-1:-1;;;;;9180:21:3;;-1:-1:-1;;;;;9180:21:3;;;;;;;;;;;;;:68;9229:3;9234:11;9212:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9202:45;;;;;;9180:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5891:37:3;;-1:-1:-1;;;;;9278:18:3;;9297:3;9302:5;9308:1;9302:8;;;;;;;;:::i;:::-;;;;;;;9312:4;9278:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9340:5;;;;;8819:546;-1:-1:-1;;;;;;;;;;;5891:37:3;;-1:-1:-1;;;;;9383:18:3;;9402:3;9407:5;9413:1;9407:8;;;;;;;;:::i;:::-;;;;;;;9417:4;9383:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8252:1186;;;8247:3;;;;;:::i;:::-;;;;8209:1229;;;;8172:1362;;;9470:52;;-1:-1:-1;;;9470:52:3;;16881:2:14;9470:52:3;;;16863:21:14;16920:2;16900:18;;;16893:30;16959:34;16939:18;;;16932:62;-1:-1:-1;;;17010:18:14;;;17003:32;17052:19;;9470:52:3;16679:398:14;9470:52:3;-1:-1:-1;;;;;9554:15:3;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;9554:21:3;;;;;;;;;9586:34;;9554:21;;:15;9586:34;;9603:3;;9608:11;;9586:34;;:::i;:::-;;;;-1:-1:-1;;9586:34:3;;;;;;;;;9576:45;;9586:34;9576:45;;;;9554:68;;;;;;;;;;-1:-1:-1;9554:68:3;;;;9546:89;;;;-1:-1:-1;;;9546:89:3;;17284:2:14;9546:89:3;;;17266:21:14;17323:1;17303:18;;;17296:29;-1:-1:-1;;;17341:18:14;;;17334:38;17389:18;;9546:89:3;17082:331:14;9546:89:3;9655:12;;;9648:19;;-1:-1:-1;;;;;;9648:19:3;;;9685:9;;;9678:16;;-1:-1:-1;;9678:16:3;;;9705:17;-1:-1:-1;9712:10:3;;9655:12;9705:17;:::i;:::-;9733:18;9740:11;;;9733:18;;;-1:-1:-1;;;;;9772:15:3;;;;;;;;;;;;-1:-1:-1;;;;;;9772:21:3;;;;;;;;;9804:34;;9772:21;;9733:18;9804:34;;9821:3;;9826:11;;9804:34;;:::i;:::-;;;;;;;;;;;;;9794:45;;;;;;9772:68;;;;;;;;;;;;9765:75;;;;;;;;;6635:3213;;;:::o;12598:305::-;12672:7;12692:11;12716;12741:2;12730:1;:8;:13;:29;;12751:1;:8;12730:29;;;12746:2;12730:29;12716:43;;12775:6;12770:105;12791:3;12787:1;:7;12770:105;;;12857:5;:1;12861;12857:5;:::i;:::-;12831:1;12833:10;12842:1;12833:6;:10;:::i;:::-;12831:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;12831:13:3;12823:40;;12816:47;;;;;12796:3;;;;:::i;:::-;;;;12770:105;;;-1:-1:-1;12892:3:3;;12598:305;-1:-1:-1;;;;12598:305:3:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;14:131:14;-1:-1:-1;;;;;89:31:14;;79:42;;69:70;;135:1;132;125:12;150:315;218:6;226;279:2;267:9;258:7;254:23;250:32;247:52;;;295:1;292;285:12;247:52;334:9;321:23;353:31;378:5;353:31;:::i;:::-;403:5;455:2;440:18;;;;427:32;;-1:-1:-1;;;150:315:14:o;470:247::-;529:6;582:2;570:9;561:7;557:23;553:32;550:52;;;598:1;595;588:12;550:52;637:9;624:23;656:31;681:5;656:31;:::i;:::-;706:5;470:247;-1:-1:-1;;;470:247:14:o;722:388::-;790:6;798;851:2;839:9;830:7;826:23;822:32;819:52;;;867:1;864;857:12;819:52;906:9;893:23;925:31;950:5;925:31;:::i;:::-;975:5;-1:-1:-1;1032:2:14;1017:18;;1004:32;1045:33;1004:32;1045:33;:::i;:::-;1097:7;1087:17;;;722:388;;;;;:::o;1115:127::-;1176:10;1171:3;1167:20;1164:1;1157:31;1207:4;1204:1;1197:15;1231:4;1228:1;1221:15;1247:275;1318:2;1312:9;1383:2;1364:13;;-1:-1:-1;;1360:27:14;1348:40;;1418:18;1403:34;;1439:22;;;1400:62;1397:88;;;1465:18;;:::i;:::-;1501:2;1494:22;1247:275;;-1:-1:-1;1247:275:14:o;1527:187::-;1576:4;1609:18;1601:6;1598:30;1595:56;;;1631:18;;:::i;:::-;-1:-1:-1;1697:2:14;1676:15;-1:-1:-1;;1672:29:14;1703:4;1668:40;;1527:187::o;1719:338::-;1784:5;1813:53;1829:36;1858:6;1829:36;:::i;:::-;1813:53;:::i;:::-;1804:62;;1889:6;1882:5;1875:21;1929:3;1920:6;1915:3;1911:16;1908:25;1905:45;;;1946:1;1943;1936:12;1905:45;1995:6;1990:3;1983:4;1976:5;1972:16;1959:43;2049:1;2042:4;2033:6;2026:5;2022:18;2018:29;2011:40;1719:338;;;;;:::o;2062:222::-;2105:5;2158:3;2151:4;2143:6;2139:17;2135:27;2125:55;;2176:1;2173;2166:12;2125:55;2198:80;2274:3;2265:6;2252:20;2245:4;2237:6;2233:17;2198:80;:::i;2289:671::-;2376:6;2384;2437:2;2425:9;2416:7;2412:23;2408:32;2405:52;;;2453:1;2450;2443:12;2405:52;2493:9;2480:23;2522:18;2563:2;2555:6;2552:14;2549:34;;;2579:1;2576;2569:12;2549:34;2602:50;2644:7;2635:6;2624:9;2620:22;2602:50;:::i;:::-;2592:60;;2705:2;2694:9;2690:18;2677:32;2661:48;;2734:2;2724:8;2721:16;2718:36;;;2750:1;2747;2740:12;2718:36;-1:-1:-1;2773:24:14;;2828:4;2820:13;;2816:27;-1:-1:-1;2806:55:14;;2857:1;2854;2847:12;2806:55;2880:74;2946:7;2941:2;2928:16;2923:2;2919;2915:11;2880:74;:::i;:::-;2870:84;;;2289:671;;;;;:::o;3173:180::-;3232:6;3285:2;3273:9;3264:7;3260:23;3256:32;3253:52;;;3301:1;3298;3291:12;3253:52;-1:-1:-1;3324:23:14;;3173:180;-1:-1:-1;3173:180:14:o;3577:456::-;3654:6;3662;3670;3723:2;3711:9;3702:7;3698:23;3694:32;3691:52;;;3739:1;3736;3729:12;3691:52;3778:9;3765:23;3797:31;3822:5;3797:31;:::i;:::-;3847:5;-1:-1:-1;3904:2:14;3889:18;;3876:32;3917:33;3876:32;3917:33;:::i;:::-;3577:456;;3969:7;;-1:-1:-1;;;4023:2:14;4008:18;;;;3995:32;;3577:456::o;4038:118::-;4124:5;4117:13;4110:21;4103:5;4100:32;4090:60;;4146:1;4143;4136:12;4161:592;4244:6;4252;4260;4268;4321:3;4309:9;4300:7;4296:23;4292:33;4289:53;;;4338:1;4335;4328:12;4289:53;4377:9;4364:23;4396:31;4421:5;4396:31;:::i;:::-;4446:5;-1:-1:-1;4503:2:14;4488:18;;4475:32;4516:33;4475:32;4516:33;:::i;:::-;4568:7;-1:-1:-1;4622:2:14;4607:18;;4594:32;;-1:-1:-1;4678:2:14;4663:18;;4650:32;4691:30;4650:32;4691:30;:::i;:::-;4161:592;;;;-1:-1:-1;4161:592:14;;-1:-1:-1;;4161:592:14:o;4758:322::-;4827:6;4880:2;4868:9;4859:7;4855:23;4851:32;4848:52;;;4896:1;4893;4886:12;4848:52;4936:9;4923:23;4969:18;4961:6;4958:30;4955:50;;;5001:1;4998;4991:12;4955:50;5024;5066:7;5057:6;5046:9;5042:22;5024:50;:::i;:::-;5014:60;4758:322;-1:-1:-1;;;;4758:322:14:o;5467:191::-;5535:4;5568:18;5560:6;5557:30;5554:56;;;5590:18;;:::i;:::-;-1:-1:-1;5635:1:14;5631:14;5647:4;5627:25;;5467:191::o;5663:972::-;5766:6;5797:2;5840;5828:9;5819:7;5815:23;5811:32;5808:52;;;5856:1;5853;5846:12;5808:52;5889:9;5883:16;5922:18;5914:6;5911:30;5908:50;;;5954:1;5951;5944:12;5908:50;5977:22;;6030:4;6022:13;;6018:27;-1:-1:-1;6008:55:14;;6059:1;6056;6049:12;6008:55;6088:2;6082:9;6111:68;6127:51;6175:2;6127:51;:::i;6111:68::-;6213:15;;;6295:1;6291:10;;;;6283:19;;6279:28;;;6244:12;;;;6319:19;;;6316:39;;;6351:1;6348;6341:12;6316:39;6375:11;;;;6395:210;6411:6;6406:3;6403:15;6395:210;;;6484:3;6478:10;6501:31;6526:5;6501:31;:::i;:::-;6545:18;;6428:12;;;;6583;;;;6395:210;;;6624:5;5663:972;-1:-1:-1;;;;;;;5663:972:14:o;6640:127::-;6701:10;6696:3;6692:20;6689:1;6682:31;6732:4;6729:1;6722:15;6756:4;6753:1;6746:15;7862:274;-1:-1:-1;;;;;8054:32:14;;;;8036:51;;8118:2;8103:18;;8096:34;8024:2;8009:18;;7862:274::o;8775:250::-;8860:1;8870:113;8884:6;8881:1;8878:13;8870:113;;;8960:11;;;8954:18;8941:11;;;8934:39;8906:2;8899:10;8870:113;;;-1:-1:-1;;9017:1:14;8999:16;;8992:27;8775:250::o;9030:396::-;9179:2;9168:9;9161:21;9142:4;9211:6;9205:13;9254:6;9249:2;9238:9;9234:18;9227:34;9270:79;9342:6;9337:2;9326:9;9322:18;9317:2;9309:6;9305:15;9270:79;:::i;:::-;9410:2;9389:15;-1:-1:-1;;9385:29:14;9370:45;;;;9417:2;9366:54;;9030:396;-1:-1:-1;;9030:396:14:o;9431:648::-;9510:6;9563:2;9551:9;9542:7;9538:23;9534:32;9531:52;;;9579:1;9576;9569:12;9531:52;9612:9;9606:16;9645:18;9637:6;9634:30;9631:50;;;9677:1;9674;9667:12;9631:50;9700:22;;9753:4;9745:13;;9741:27;-1:-1:-1;9731:55:14;;9782:1;9779;9772:12;9731:55;9811:2;9805:9;9836:49;9852:32;9881:2;9852:32;:::i;9836:49::-;9908:2;9901:5;9894:17;9948:7;9943:2;9938;9934;9930:11;9926:20;9923:33;9920:53;;;9969:1;9966;9959:12;9920:53;9982:67;10046:2;10041;10034:5;10030:14;10025:2;10021;10017:11;9982:67;:::i;:::-;10068:5;9431:648;-1:-1:-1;;;;;9431:648:14:o;10084:492::-;10259:3;10297:6;10291:13;10313:66;10372:6;10367:3;10360:4;10352:6;10348:17;10313:66;:::i;:::-;10442:13;;10401:16;;;;10464:70;10442:13;10401:16;10511:4;10499:17;;10464:70;:::i;:::-;10550:20;;10084:492;-1:-1:-1;;;;10084:492:14:o;10581:127::-;10642:10;10637:3;10633:20;10630:1;10623:31;10673:4;10670:1;10663:15;10697:4;10694:1;10687:15;10713:128;10780:9;;;10801:11;;;10798:37;;;10815:18;;:::i;11028:287::-;11157:3;11195:6;11189:13;11211:66;11270:6;11265:3;11258:4;11250:6;11246:17;11211:66;:::i;:::-;11293:16;;;;;11028:287;-1:-1:-1;;11028:287:14:o;11320:184::-;11390:6;11443:2;11431:9;11422:7;11418:23;11414:32;11411:52;;;11459:1;11456;11449:12;11411:52;-1:-1:-1;11482:16:14;;11320:184;-1:-1:-1;11320:184:14:o;11509:125::-;11574:9;;;11595:10;;;11592:36;;;11608:18;;:::i;11918:384::-;-1:-1:-1;;;;;;12103:33:14;;12091:46;;12160:13;;12073:3;;12182:74;12160:13;12245:1;12236:11;;12229:4;12217:17;;12182:74;:::i;:::-;12276:16;;;;12294:1;12272:24;;11918:384;-1:-1:-1;;;11918:384:14:o;12307:245::-;12374:6;12427:2;12415:9;12406:7;12402:23;12398:32;12395:52;;;12443:1;12440;12433:12;12395:52;12475:9;12469:16;12494:28;12516:5;12494:28;:::i;12985:610::-;13231:13;;13174:3;;13205;;13284:4;13311:15;;;13174:3;13354:175;13368:6;13365:1;13362:13;13354:175;;;13431:13;;13417:28;;13467:14;;;;13504:15;;;;13390:1;13383:9;13354:175;;;-1:-1:-1;;13538:21:14;;;-1:-1:-1;13575:14:14;;;;;-1:-1:-1;;;12985:610:14:o;13600:168::-;13673:9;;;13704;;13721:15;;;13715:22;;13701:37;13691:71;;13742:18;;:::i;13962:484::-;14164:2;14146:21;;;14203:2;14183:18;;;14176:30;14242:34;14237:2;14222:18;;14215:62;14313:34;14308:2;14293:18;;14286:62;-1:-1:-1;;;14379:3:14;14364:19;;14357:47;14436:3;14421:19;;13962:484::o;14451:345::-;-1:-1:-1;;;;;14671:32:14;;;;14653:51;;14735:2;14720:18;;14713:34;;;;14778:2;14763:18;;14756:34;14641:2;14626:18;;14451:345::o;14801:135::-;14840:3;14861:17;;;14858:43;;14881:18;;:::i;:::-;-1:-1:-1;14928:1:14;14917:13;;14801:135::o;14941:667::-;15006:5;15059:3;15052:4;15044:6;15040:17;15036:27;15026:55;;15077:1;15074;15067:12;15026:55;15106:6;15100:13;15132:4;15156:68;15172:51;15220:2;15172:51;:::i;15156:68::-;15258:15;;;15344:1;15340:10;;;;15328:23;;15324:32;;;15289:12;;;;15368:15;;;15365:35;;;15396:1;15393;15386:12;15365:35;15432:2;15424:6;15420:15;15444:135;15460:6;15455:3;15452:15;15444:135;;;15526:10;;15514:23;;15557:12;;;;15477;;15444:135;;;-1:-1:-1;15597:5:14;14941:667;-1:-1:-1;;;;;;14941:667:14:o;15613:614::-;15742:6;15750;15803:2;15791:9;15782:7;15778:23;15774:32;15771:52;;;15819:1;15816;15809:12;15771:52;15852:9;15846:16;15881:18;15922:2;15914:6;15911:14;15908:34;;;15938:1;15935;15928:12;15908:34;15961:72;16025:7;16016:6;16005:9;16001:22;15961:72;:::i;:::-;15951:82;;16079:2;16068:9;16064:18;16058:25;16042:41;;16108:2;16098:8;16095:16;16092:36;;;16124:1;16121;16114:12;16092:36;;16147:74;16213:7;16202:8;16191:9;16187:24;16147:74;:::i;16232:442::-;-1:-1:-1;;;;;16479:32:14;;;;16461:51;;-1:-1:-1;;;;;;16548:33:14;;;;16543:2;16528:18;;16521:61;16613:2;16598:18;;16591:34;16656:2;16641:18;;16634:34;16448:3;16433:19;;16232:442::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "deal(address,address,uint256)": "6bce989b",
    "deal(address,address,uint256,bool)": "97754ae9",
    "deal(address,uint256)": "c88a5e6d",
    "deployCode(string)": "9a8325a0",
    "deployCode(string,bytes)": "29ce9dde",
    "failed()": "ba414fa6",
    "hoax(address)": "233240ee",
    "hoax(address,address)": "29a9e300",
    "hoax(address,address,uint256)": "af9bbe5f",
    "hoax(address,uint256)": "e9a79a7b",
    "rewind(uint256)": "2d6c17a3",
    "setUp()": "0a9254e4",
    "skip(uint256)": "b9c071b4",
    "startHoax(address)": "6f597075",
    "startHoax(address,address)": "d06d8229",
    "startHoax(address,address,uint256)": "3bf82db1",
    "startHoax(address,uint256)": "108554f2",
    "tip(address,address,uint256)": "d82555f1",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"name\":\"WARNING_Deprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"adjust\",\"type\":\"bool\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"what\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"hoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"rewind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"}],\"name\":\"startHoax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"give\",\"type\":\"uint256\"}],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/Faucet.t.sol\":\"BaseSetup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/Faucet.sol\":{\"keccak256\":\"0x57118e820436eb1b5f9c36d992a1c39272e68a8d38e8d2260c289b0ad36c39b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f2784843482be7d6c67c6927e2a8b0762e6353189f147ef306f9efec9f92122\",\"dweb:/ipfs/QmRLCspEr33sW6aRMTKYkEjphRWdPwHpcPzmidA4HqKqig\"]},\"contracts/MockERC20.sol\":{\"keccak256\":\"0xd933704d6c88d170feb869dbeda79db6c306055484475f9ecb17825fa8c465d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://533d0c47222fe2d7321456280a5aa07b485213b6b4583fdba477130d875d7366\",\"dweb:/ipfs/QmfJwqhgzjeBQugeb1ve866NkGhFnQuBoBf39b7rHdxgjW\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xd2907fc0f4fce0d02ee94248ae904637703ad23a944df5b044be7b80833b304a\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://9cc900f744cee33f078d4d66740c0fbf67d4c831ec44da8e1d6412f62b4a3ea6\",\"dweb:/ipfs/QmW1ANjSBk58v2RiPUwbTXRw2fmarTxiKeU4VqVSzsgsUx\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xead31e4de0ef5591a934f85d8112cd2afec7d100a7756b57563098a96fc462a4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://710b631ed1fb8a47bfd47e867e1bf210bf06333ca62ee0c85fabf1ed4124094c\",\"dweb:/ipfs/QmUsc2aqD6x8AFEoH1Cbef4ru1bqTuBzs7pQTamBF7CLre\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x307455a1c04b7a4f87313ff608555d6614d60d3319bd2b5bfeb65ee6128b4421\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b746047a76f37d63a9a14bd73019c63ad66b52112b297e36b607fa40da104e48\",\"dweb:/ipfs/QmUfuV83esgaAS5Fo4UYKhaMLVRQJicWsQFRC9bBgoPxNM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf213bd377a21fbbb90c14c80ddfcf5ae98d6defd5b2853fcf984593c8e3c6f54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09bb611e9c4addc1a53182e07b58c95145d828209f4811db16e2b78c020b00a6\",\"dweb:/ipfs/Qma66FtQ2U8hpBjr26VXXWBrY7cuLZzy7jyWL19fbStyMc\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"test/foundry/Faucet.t.sol\":{\"keccak256\":\"0x48037e4fe8935db5f0aab724d837803b0bd66e1bbeebf5d89e7fcdf0172df055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489b51610ff41ae06bc6bffb5b1f7b348f0c8651d810dc7f574ba686f375be5f\",\"dweb:/ipfs/QmfSNxXdUcSpco1te3q1Zvg1YHF3WW9qzxE43WaNV1cWb6\"]},\"test/foundry/utils/Utils.sol\":{\"keccak256\":\"0xaf7f66bd0e5b68ddfaa65a5ae20dd60a61d2c06f90ad0d9d739c52e8b4625b5e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a559d9adf9bad12b4929a709fcfbd6dc2518a6b677b9be17b70ce9c29282ee46\",\"dweb:/ipfs/QmaqYP7iW2sToLbGKPRxmAbeSW4z7hTHL3ri5JmMe3LPYP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "msg",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_Deprecated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "adjust",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deal"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "what",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployCode",
          "outputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "hoax"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewind"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "skip"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "origin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startHoax"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "give",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "tip"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/Faucet.t.sol": "BaseSetup"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Faucet.sol": {
        "keccak256": "0x57118e820436eb1b5f9c36d992a1c39272e68a8d38e8d2260c289b0ad36c39b9",
        "urls": [
          "bzz-raw://5f2784843482be7d6c67c6927e2a8b0762e6353189f147ef306f9efec9f92122",
          "dweb:/ipfs/QmRLCspEr33sW6aRMTKYkEjphRWdPwHpcPzmidA4HqKqig"
        ],
        "license": "MIT"
      },
      "contracts/MockERC20.sol": {
        "keccak256": "0xd933704d6c88d170feb869dbeda79db6c306055484475f9ecb17825fa8c465d0",
        "urls": [
          "bzz-raw://533d0c47222fe2d7321456280a5aa07b485213b6b4583fdba477130d875d7366",
          "dweb:/ipfs/QmfJwqhgzjeBQugeb1ve866NkGhFnQuBoBf39b7rHdxgjW"
        ],
        "license": "UNLICENSED"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xd2907fc0f4fce0d02ee94248ae904637703ad23a944df5b044be7b80833b304a",
        "urls": [
          "bzz-raw://9cc900f744cee33f078d4d66740c0fbf67d4c831ec44da8e1d6412f62b4a3ea6",
          "dweb:/ipfs/QmW1ANjSBk58v2RiPUwbTXRw2fmarTxiKeU4VqVSzsgsUx"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xead31e4de0ef5591a934f85d8112cd2afec7d100a7756b57563098a96fc462a4",
        "urls": [
          "bzz-raw://710b631ed1fb8a47bfd47e867e1bf210bf06333ca62ee0c85fabf1ed4124094c",
          "dweb:/ipfs/QmUsc2aqD6x8AFEoH1Cbef4ru1bqTuBzs7pQTamBF7CLre"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x307455a1c04b7a4f87313ff608555d6614d60d3319bd2b5bfeb65ee6128b4421",
        "urls": [
          "bzz-raw://b746047a76f37d63a9a14bd73019c63ad66b52112b297e36b607fa40da104e48",
          "dweb:/ipfs/QmUfuV83esgaAS5Fo4UYKhaMLVRQJicWsQFRC9bBgoPxNM"
        ],
        "license": "Unlicense"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf213bd377a21fbbb90c14c80ddfcf5ae98d6defd5b2853fcf984593c8e3c6f54",
        "urls": [
          "bzz-raw://09bb611e9c4addc1a53182e07b58c95145d828209f4811db16e2b78c020b00a6",
          "dweb:/ipfs/Qma66FtQ2U8hpBjr26VXXWBrY7cuLZzy7jyWL19fbStyMc"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "test/foundry/Faucet.t.sol": {
        "keccak256": "0x48037e4fe8935db5f0aab724d837803b0bd66e1bbeebf5d89e7fcdf0172df055",
        "urls": [
          "bzz-raw://489b51610ff41ae06bc6bffb5b1f7b348f0c8651d810dc7f574ba686f375be5f",
          "dweb:/ipfs/QmfSNxXdUcSpco1te3q1Zvg1YHF3WW9qzxE43WaNV1cWb6"
        ],
        "license": "MIT"
      },
      "test/foundry/utils/Utils.sol": {
        "keccak256": "0xaf7f66bd0e5b68ddfaa65a5ae20dd60a61d2c06f90ad0d9d739c52e8b4625b5e",
        "urls": [
          "bzz-raw://a559d9adf9bad12b4929a709fcfbd6dc2518a6b677b9be17b70ce9c29282ee46",
          "dweb:/ipfs/QmaqYP7iW2sToLbGKPRxmAbeSW4z7hTHL3ri5JmMe3LPYP"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/Faucet.t.sol",
    "id": 12853,
    "exportedSymbols": {
      "BaseSetup": [
        12590
      ],
      "Faucet": [
        99
      ],
      "FaucetTest": [
        12852
      ],
      "IERC20": [
        12434
      ],
      "MockERC20": [
        131
      ],
      "StdStorage": [
        2453
      ],
      "Test": [
        2355
      ],
      "Utils": [
        12970
      ],
      "console": [
        11656
      ],
      "stdStorage": [
        3410
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:2852:11",
    "nodes": [
      {
        "id": 12483,
        "nodeType": "PragmaDirective",
        "src": "33:22:11",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8"
        ]
      },
      {
        "id": 12485,
        "nodeType": "ImportDirective",
        "src": "59:46:11",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12853,
        "sourceUnit": 11657,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12484,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11656,
              "src": "67:7:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12489,
        "nodeType": "ImportDirective",
        "src": "107:64:11",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12853,
        "sourceUnit": 3411,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12486,
              "name": "stdStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3410,
              "src": "115:10:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 12487,
              "name": "StdStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2453,
              "src": "127:10:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 12488,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2355,
              "src": "139:4:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12491,
        "nodeType": "ImportDirective",
        "src": "173:70:11",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12853,
        "sourceUnit": 12435,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12490,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12434,
              "src": "181:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12493,
        "nodeType": "ImportDirective",
        "src": "247:40:11",
        "nodes": [],
        "absolutePath": "test/foundry/utils/Utils.sol",
        "file": "./utils/Utils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12853,
        "sourceUnit": 12971,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12492,
              "name": "Utils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12970,
              "src": "255:5:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12495,
        "nodeType": "ImportDirective",
        "src": "289:50:11",
        "nodes": [],
        "absolutePath": "contracts/Faucet.sol",
        "file": "../../contracts/Faucet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12853,
        "sourceUnit": 100,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12494,
              "name": "Faucet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 99,
              "src": "297:6:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12497,
        "nodeType": "ImportDirective",
        "src": "341:57:11",
        "nodes": [],
        "absolutePath": "contracts/MockERC20.sol",
        "file": "../../contracts//MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12853,
        "sourceUnit": 132,
        "symbolAliases": [
          {
            "foreign": {
              "id": 12496,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 131,
              "src": "349:9:11",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 12590,
        "nodeType": "ContractDefinition",
        "src": "402:608:11",
        "nodes": [
          {
            "id": 12502,
            "nodeType": "VariableDeclaration",
            "src": "435:20:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "utils",
            "nameLocation": "450:5:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Utils_$12970",
              "typeString": "contract Utils"
            },
            "typeName": {
              "id": 12501,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12500,
                "name": "Utils",
                "nameLocations": [
                  "435:5:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12970,
                "src": "435:5:11"
              },
              "referencedDeclaration": 12970,
              "src": "435:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Utils_$12970",
                "typeString": "contract Utils"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12505,
            "nodeType": "VariableDeclaration",
            "src": "461:22:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "faucet",
            "nameLocation": "477:6:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Faucet_$99",
              "typeString": "contract Faucet"
            },
            "typeName": {
              "id": 12504,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12503,
                "name": "Faucet",
                "nameLocations": [
                  "461:6:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 99,
                "src": "461:6:11"
              },
              "referencedDeclaration": 99,
              "src": "461:6:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Faucet_$99",
                "typeString": "contract Faucet"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12508,
            "nodeType": "VariableDeclaration",
            "src": "489:24:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "508:5:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$131",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 12507,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12506,
                "name": "MockERC20",
                "nameLocations": [
                  "489:9:11"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 131,
                "src": "489:9:11"
              },
              "referencedDeclaration": 131,
              "src": "489:9:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$131",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12511,
            "nodeType": "VariableDeclaration",
            "src": "521:32:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "548:5:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 12509,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "521:15:11",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 12510,
              "nodeType": "ArrayTypeName",
              "src": "521:17:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12513,
            "nodeType": "VariableDeclaration",
            "src": "559:22:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "576:5:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12512,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "559:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12515,
            "nodeType": "VariableDeclaration",
            "src": "587:20:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "dev",
            "nameLocation": "604:3:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12514,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "587:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 12518,
            "nodeType": "VariableDeclaration",
            "src": "613:33:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "faucetBal",
            "nameLocation": "630:9:11",
            "scope": 12590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12516,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "613:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 12517,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "642:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "id": 12589,
            "nodeType": "FunctionDefinition",
            "src": "654:353:11",
            "nodes": [],
            "body": {
              "id": 12588,
              "nodeType": "Block",
              "src": "686:321:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12521,
                      "name": "utils",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12502,
                      "src": "696:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$12970",
                        "typeString": "contract Utils"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "704:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Utils_$12970_$",
                          "typeString": "function () returns (contract Utils)"
                        },
                        "typeName": {
                          "id": 12523,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12522,
                            "name": "Utils",
                            "nameLocations": [
                              "708:5:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12970,
                            "src": "708:5:11"
                          },
                          "referencedDeclaration": 12970,
                          "src": "708:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$12970",
                            "typeString": "contract Utils"
                          }
                        }
                      },
                      "id": 12525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "704:11:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Utils_$12970",
                        "typeString": "contract Utils"
                      }
                    },
                    "src": "696:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Utils_$12970",
                      "typeString": "contract Utils"
                    }
                  },
                  "id": 12527,
                  "nodeType": "ExpressionStatement",
                  "src": "696:19:11"
                },
                {
                  "expression": {
                    "id": 12533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12528,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12511,
                      "src": "725:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 12531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "751:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "id": 12529,
                          "name": "utils",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12502,
                          "src": "733:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Utils_$12970",
                            "typeString": "contract Utils"
                          }
                        },
                        "id": 12530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "739:11:11",
                        "memberName": "createUsers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12950,
                        "src": "733:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) external returns (address payable[] memory)"
                        }
                      },
                      "id": 12532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "733:20:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "725:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 12534,
                  "nodeType": "ExpressionStatement",
                  "src": "725:28:11"
                },
                {
                  "expression": {
                    "id": 12539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12535,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12513,
                      "src": "763:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 12536,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12511,
                        "src": "771:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 12538,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 12537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "777:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "771:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "763:16:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12540,
                  "nodeType": "ExpressionStatement",
                  "src": "763:16:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12544,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12513,
                        "src": "798:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4f776e6572",
                        "id": 12545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_929f3fd6848015f83b9210c89f7744e3941acae1195c8bf9f5798c090dc8f497",
                          "typeString": "literal_string \"Owner\""
                        },
                        "value": "Owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_929f3fd6848015f83b9210c89f7744e3941acae1195c8bf9f5798c090dc8f497",
                          "typeString": "literal_string \"Owner\""
                        }
                      ],
                      "expression": {
                        "id": 12541,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "789:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "792:5:11",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3586,
                      "src": "789:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 12546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12547,
                  "nodeType": "ExpressionStatement",
                  "src": "789:24:11"
                },
                {
                  "expression": {
                    "id": 12552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12548,
                      "name": "dev",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12515,
                      "src": "823:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 12549,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12511,
                        "src": "829:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 12551,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 12550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "835:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "829:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "823:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12553,
                  "nodeType": "ExpressionStatement",
                  "src": "823:14:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12557,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "856:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "446576656c6f706572",
                        "id": 12558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "861:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9382a7c65097a9587879afb193759dbfc4bfcfdf3e5a296379d7f2e1e5cacd1",
                          "typeString": "literal_string \"Developer\""
                        },
                        "value": "Developer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9382a7c65097a9587879afb193759dbfc4bfcfdf3e5a296379d7f2e1e5cacd1",
                          "typeString": "literal_string \"Developer\""
                        }
                      ],
                      "expression": {
                        "id": 12554,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "847:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "850:5:11",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3586,
                      "src": "847:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 12559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "847:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12560,
                  "nodeType": "ExpressionStatement",
                  "src": "847:26:11"
                },
                {
                  "expression": {
                    "id": 12566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12561,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12508,
                      "src": "885:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$131",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "893:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$131_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 12563,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12562,
                            "name": "MockERC20",
                            "nameLocations": [
                              "897:9:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 131,
                            "src": "897:9:11"
                          },
                          "referencedDeclaration": 131,
                          "src": "897:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$131",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 12565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "893:15:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$131",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "885:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$131",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 12567,
                  "nodeType": "ExpressionStatement",
                  "src": "885:23:11"
                },
                {
                  "expression": {
                    "id": 12576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12568,
                      "name": "faucet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12505,
                      "src": "918:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$99",
                        "typeString": "contract Faucet"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 12573,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12508,
                              "src": "945:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$131",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$131",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 12572,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12434,
                            "src": "938:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$12434_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 12574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "938:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$12434",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$12434",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 12571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "927:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20_$12434_$returns$_t_contract$_Faucet_$99_$",
                          "typeString": "function (contract IERC20) returns (contract Faucet)"
                        },
                        "typeName": {
                          "id": 12570,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12569,
                            "name": "Faucet",
                            "nameLocations": [
                              "931:6:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 99,
                            "src": "931:6:11"
                          },
                          "referencedDeclaration": 99,
                          "src": "931:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Faucet_$99",
                            "typeString": "contract Faucet"
                          }
                        }
                      },
                      "id": 12575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "927:25:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Faucet_$99",
                        "typeString": "contract Faucet"
                      }
                    },
                    "src": "918:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Faucet_$99",
                      "typeString": "contract Faucet"
                    }
                  },
                  "id": 12577,
                  "nodeType": "ExpressionStatement",
                  "src": "918:34:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12583,
                            "name": "faucet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12505,
                            "src": "981:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Faucet_$99",
                              "typeString": "contract Faucet"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Faucet_$99",
                              "typeString": "contract Faucet"
                            }
                          ],
                          "id": 12582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "973:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12581,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "973:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "973:15:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12585,
                        "name": "faucetBal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12518,
                        "src": "990:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12578,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12508,
                        "src": "962:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$131",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 12580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "968:4:11",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 130,
                      "src": "962:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "962:38:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12587,
                  "nodeType": "ExpressionStatement",
                  "src": "962:38:11"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "663:5:11",
            "parameters": {
              "id": 12519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "668:2:11"
            },
            "returnParameters": {
              "id": 12520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:11"
            },
            "scope": 12590,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12498,
              "name": "Test",
              "nameLocations": [
                "424:4:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2355,
              "src": "424:4:11"
            },
            "id": 12499,
            "nodeType": "InheritanceSpecifier",
            "src": "424:4:11"
          }
        ],
        "canonicalName": "BaseSetup",
        "contractDependencies": [
          99,
          131,
          12970
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12590,
          2355,
          1918
        ],
        "name": "BaseSetup",
        "nameLocation": "411:9:11",
        "scope": 12853,
        "usedErrors": []
      },
      {
        "id": 12852,
        "nodeType": "ContractDefinition",
        "src": "1014:1871:11",
        "nodes": [
          {
            "id": 12595,
            "nodeType": "VariableDeclaration",
            "src": "1053:22:11",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "amount_todrip",
            "nameLocation": "1058:13:11",
            "scope": 12852,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12593,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1053:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 12594,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1074:1:11",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 12605,
            "nodeType": "FunctionDefinition",
            "src": "1084:66:11",
            "nodes": [],
            "body": {
              "id": 12604,
              "nodeType": "Block",
              "src": "1118:32:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 12599,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1129:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_FaucetTest_$12852_$",
                          "typeString": "type(contract super FaucetTest)"
                        }
                      },
                      "id": 12601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1135:5:11",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12589,
                      "src": "1129:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:13:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12603,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:13:11"
                }
              ]
            },
            "baseFunctions": [
              12589
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1093:5:11",
            "overrides": {
              "id": 12597,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1101:8:11"
            },
            "parameters": {
              "id": 12596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:11"
            },
            "returnParameters": {
              "id": 12598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1118:0:11"
            },
            "scope": 12852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12661,
            "nodeType": "FunctionDefinition",
            "src": "1158:424:11",
            "nodes": [],
            "body": {
              "id": 12660,
              "nodeType": "Block",
              "src": "1193:389:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6472697020616e64207472616e73666572696e6720746f6b656e73",
                        "id": 12611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1216:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f2de8753759eb7db31503103ec866307bd4ffc45aae102c2d6ca11641e3506f",
                          "typeString": "literal_string \"drip and transfering tokens\""
                        },
                        "value": "drip and transfering tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0f2de8753759eb7db31503103ec866307bd4ffc45aae102c2d6ca11641e3506f",
                          "typeString": "literal_string \"drip and transfering tokens\""
                        }
                      ],
                      "expression": {
                        "id": 12608,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "1204:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1212:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4187,
                      "src": "1204:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 12612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1204:42:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12613,
                  "nodeType": "ExpressionStatement",
                  "src": "1204:42:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030",
                        "id": 12617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1275:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 12614,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "1259:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1266:8:11",
                      "memberName": "setLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "1259:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 12618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1259:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12619,
                  "nodeType": "ExpressionStatement",
                  "src": "1259:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12621,
                            "name": "faucet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12505,
                            "src": "1299:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Faucet_$99",
                              "typeString": "contract Faucet"
                            }
                          },
                          "id": 12622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1306:5:11",
                          "memberName": "limit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "1299:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 12623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1299:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030",
                        "id": 12624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1315:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "id": 12620,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "1290:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12626,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:29:11"
                },
                {
                  "assignments": [
                    12628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12628,
                      "mutability": "mutable",
                      "name": "devBal_BeforeDrip",
                      "nameLocation": "1337:17:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 12660,
                      "src": "1332:22:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12627,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1332:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12633,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12631,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "1373:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12629,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12508,
                        "src": "1357:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$131",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 12630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1363:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11868,
                      "src": "1357:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1332:45:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12635,
                        "name": "devBal_BeforeDrip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12628,
                        "src": "1399:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 12636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1417:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 12634,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "1390:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1390:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12638,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:29:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12642,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "1444:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313530",
                        "id": 12643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1449:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "expression": {
                        "id": 12639,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "1432:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1439:4:11",
                      "memberName": "drip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1432:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1432:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12645,
                  "nodeType": "ExpressionStatement",
                  "src": "1432:21:11"
                },
                {
                  "assignments": [
                    12647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12647,
                      "mutability": "mutable",
                      "name": "devBal_AfterDrip",
                      "nameLocation": "1471:16:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 12660,
                      "src": "1466:21:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12646,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1466:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12652,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12650,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "1506:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12648,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12508,
                        "src": "1490:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$131",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 12649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1496:9:11",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11868,
                      "src": "1490:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1466:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12654,
                          "name": "devBal_AfterDrip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12647,
                          "src": "1532:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 12655,
                          "name": "devBal_BeforeDrip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12628,
                          "src": "1551:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1532:36:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313530",
                        "id": 12657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1570:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        }
                      ],
                      "id": 12653,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "1523:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1523:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12659,
                  "nodeType": "ExpressionStatement",
                  "src": "1523:51:11"
                }
              ]
            },
            "functionSelector": "34ae19a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_drip_token",
            "nameLocation": "1167:15:11",
            "parameters": {
              "id": 12606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:2:11"
            },
            "returnParameters": {
              "id": 12607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1193:0:11"
            },
            "scope": 12852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12694,
            "nodeType": "FunctionDefinition",
            "src": "1590:232:11",
            "nodes": [],
            "body": {
              "id": 12693,
              "nodeType": "Block",
              "src": "1636:186:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "657870656374696e6720726576657274",
                        "id": 12667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1657:18:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ec386ce23b043f9e060c887879e4f93a56ca1a33f9c6b83aabd1c763c5645f0",
                          "typeString": "literal_string \"expecting revert\""
                        },
                        "value": "expecting revert"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2ec386ce23b043f9e060c887879e4f93a56ca1a33f9c6b83aabd1c763c5645f0",
                          "typeString": "literal_string \"expecting revert\""
                        }
                      ],
                      "expression": {
                        "id": 12664,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "1645:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1653:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4187,
                      "src": "1645:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 12668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12669,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12673,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "1697:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12674,
                        "name": "amount_todrip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12595,
                        "src": "1702:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12670,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "1685:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1692:4:11",
                      "memberName": "drip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1685:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12676,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "5452595f4c41544552",
                            "id": 12682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1760:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_df1628f7c7ad448a0ae305201587a4bd46ce347e5ce17ff69ef1cd4f1384801e",
                              "typeString": "literal_string \"TRY_LATER\""
                            },
                            "value": "TRY_LATER"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_df1628f7c7ad448a0ae305201587a4bd46ce347e5ce17ff69ef1cd4f1384801e",
                              "typeString": "literal_string \"TRY_LATER\""
                            }
                          ],
                          "expression": {
                            "id": 12680,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1743:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 12681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1747:12:11",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1743:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 12683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1743:29:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 12677,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "1727:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1730:12:11",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3520,
                      "src": "1727:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 12684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1727:46:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12685,
                  "nodeType": "ExpressionStatement",
                  "src": "1727:46:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12689,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "1794:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12690,
                        "name": "amount_todrip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12595,
                        "src": "1799:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12686,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "1782:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1789:4:11",
                      "memberName": "drip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1782:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1782:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12692,
                  "nodeType": "ExpressionStatement",
                  "src": "1782:31:11"
                }
              ]
            },
            "functionSelector": "d85eeba2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_drip_revertIfThrottled",
            "nameLocation": "1599:27:11",
            "parameters": {
              "id": 12662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1626:2:11"
            },
            "returnParameters": {
              "id": 12663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:0:11"
            },
            "scope": 12852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12724,
            "nodeType": "FunctionDefinition",
            "src": "1829:236:11",
            "nodes": [],
            "body": {
              "id": 12723,
              "nodeType": "Block",
              "src": "1877:188:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546865206661756365742062616c616e63652073686f756c642062652072656475636564",
                        "id": 12700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1899:38:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_834c3cf5319b147bfb580ae9ed819be16e0a2ce9853a09e1558fc8b324c6de9b",
                          "typeString": "literal_string \"The faucet balance should be reduced\""
                        },
                        "value": "The faucet balance should be reduced"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_834c3cf5319b147bfb580ae9ed819be16e0a2ce9853a09e1558fc8b324c6de9b",
                          "typeString": "literal_string \"The faucet balance should be reduced\""
                        }
                      ],
                      "expression": {
                        "id": 12697,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "1887:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1895:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4187,
                      "src": "1887:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 12701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:51:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12702,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:51:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12706,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "1960:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12707,
                        "name": "amount_todrip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12595,
                        "src": "1965:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12703,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "1948:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1955:4:11",
                      "memberName": "drip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "1948:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12709,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12715,
                                "name": "faucet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12505,
                                "src": "2022:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$99",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$99",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 12714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2014:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12713,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2014:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2014:15:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 12711,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12508,
                            "src": "1998:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$131",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 12712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2004:9:11",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11868,
                          "src": "1998:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1998:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12718,
                          "name": "faucetBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12518,
                          "src": "2032:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 12719,
                          "name": "amount_todrip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12595,
                          "src": "2044:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2032:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12710,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "1989:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1989:69:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12722,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:69:11"
                }
              ]
            },
            "functionSelector": "be12c0d6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_drip_reduceFaucetBalance",
            "nameLocation": "1838:29:11",
            "parameters": {
              "id": 12695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1867:2:11"
            },
            "returnParameters": {
              "id": 12696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1877:0:11"
            },
            "scope": 12852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12785,
            "nodeType": "FunctionDefinition",
            "src": "2072:384:11",
            "nodes": [],
            "body": {
              "id": 12784,
              "nodeType": "Block",
              "src": "2147:309:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66757a7a696e67206e6f77",
                        "id": 12734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2169:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68532a267496b7d57ae47a63ac3a3c1c1c944a248e536a31e3a1ba596b4752d0",
                          "typeString": "literal_string \"fuzzing now\""
                        },
                        "value": "fuzzing now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_68532a267496b7d57ae47a63ac3a3c1c1c944a248e536a31e3a1ba596b4752d0",
                          "typeString": "literal_string \"fuzzing now\""
                        }
                      ],
                      "expression": {
                        "id": 12731,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "2157:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2165:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4187,
                      "src": "2157:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 12735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:26:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12736,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:26:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12740,
                          "name": "_recepient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12726,
                          "src": "2212:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 12743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2234:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2226:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2226:7:11",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2226:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2212:24:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 12737,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "2202:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2205:6:11",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3591,
                      "src": "2202:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 12746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2202:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12747,
                  "nodeType": "ExpressionStatement",
                  "src": "2202:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12751,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12728,
                          "src": "2257:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 12752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2268:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2257:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 12748,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "2247:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2250:6:11",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3591,
                      "src": "2247:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 12754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:25:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12755,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12759,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "2296:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12760,
                        "name": "amount_todrip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12595,
                        "src": "2301:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12756,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "2284:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2291:4:11",
                      "memberName": "drip",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85,
                      "src": "2284:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 12761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12762,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12768,
                                "name": "faucet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12505,
                                "src": "2358:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Faucet_$99",
                                  "typeString": "contract Faucet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Faucet_$99",
                                  "typeString": "contract Faucet"
                                }
                              ],
                              "id": 12767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2350:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12766,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2350:7:11",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2350:15:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 12764,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12508,
                            "src": "2334:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$131",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 12765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2340:9:11",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11868,
                          "src": "2334:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2334:32:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12771,
                          "name": "faucetBal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12518,
                          "src": "2368:9:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 12772,
                          "name": "amount_todrip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12595,
                          "src": "2380:13:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2368:25:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12763,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "2325:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:69:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12775,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:69:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12779,
                            "name": "dev",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12515,
                            "src": "2429:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 12777,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12508,
                            "src": "2413:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$131",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 12778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2419:9:11",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11868,
                          "src": "2413:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2413:20:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12781,
                        "name": "amount_todrip",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12595,
                        "src": "2435:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12776,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "2404:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:45:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12783,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:45:11"
                }
              ]
            },
            "functionSelector": "79f60672",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_fuzzDrip_transfer",
            "nameLocation": "2081:22:11",
            "parameters": {
              "id": 12729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12726,
                  "mutability": "mutable",
                  "name": "_recepient",
                  "nameLocation": "2112:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 12785,
                  "src": "2104:18:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2104:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12728,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2129:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 12785,
                  "src": "2124:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12727,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2103:34:11"
            },
            "returnParameters": {
              "id": 12730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2147:0:11"
            },
            "scope": 12852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12851,
            "nodeType": "FunctionDefinition",
            "src": "2463:419:11",
            "nodes": [],
            "body": {
              "id": 12850,
              "nodeType": "Block",
              "src": "2496:386:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "73657474696e67206c696d6974",
                        "id": 12791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2518:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_696905270a493deaf593890a1ae488efdd8622a62511cfe83d4af9052cffd6f9",
                          "typeString": "literal_string \"setting limit\""
                        },
                        "value": "setting limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_696905270a493deaf593890a1ae488efdd8622a62511cfe83d4af9052cffd6f9",
                          "typeString": "literal_string \"setting limit\""
                        }
                      ],
                      "expression": {
                        "id": 12788,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "2506:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2514:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4187,
                      "src": "2506:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 12792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2506:28:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12793,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:28:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12797,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "2555:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12794,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "2546:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2549:5:11",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "2546:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 12798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2546:13:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12799,
                  "nodeType": "ExpressionStatement",
                  "src": "2546:13:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 12805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2602:34:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "expression": {
                            "id": 12803,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2585:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 12804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2589:12:11",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2585:16:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 12806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2585:52:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 12800,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "2569:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$3592",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 12802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2572:12:11",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3520,
                      "src": "2569:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 12807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2569:69:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12808,
                  "nodeType": "ExpressionStatement",
                  "src": "2569:69:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030",
                        "id": 12812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2664:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 12809,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "2648:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2655:8:11",
                      "memberName": "setLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "2648:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 12813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2648:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12814,
                  "nodeType": "ExpressionStatement",
                  "src": "2648:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d73672e73656e6465723a20",
                        "id": 12818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2692:14:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9428e8089bdf788b34bc8dc44a6e9219d3ac45304630ac6120e79d1b730f024",
                          "typeString": "literal_string \"msg.sender: \""
                        },
                        "value": "msg.sender: "
                      },
                      {
                        "expression": {
                          "id": 12819,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2708:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2712:6:11",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2708:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9428e8089bdf788b34bc8dc44a6e9219d3ac45304630ac6120e79d1b730f024",
                          "typeString": "literal_string \"msg.sender: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12815,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "2680:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2688:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4351,
                      "src": "2680:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 12821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2680:39:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12822,
                  "nodeType": "ExpressionStatement",
                  "src": "2680:39:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f776e65723a20",
                        "id": 12826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2741:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab99a03675c5b9422dd3bc117c9d99e6e66b5b4f72e75129794435a003c911bb",
                          "typeString": "literal_string \"owner: \""
                        },
                        "value": "owner: "
                      },
                      {
                        "id": 12827,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12513,
                        "src": "2752:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ab99a03675c5b9422dd3bc117c9d99e6e66b5b4f72e75129794435a003c911bb",
                          "typeString": "literal_string \"owner: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12823,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "2729:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2737:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4351,
                      "src": "2729:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 12828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2729:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12829,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:29:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6465763a20",
                        "id": 12833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2780:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ddf00cdbd992f2515e3df7838a15bd51ed5d59294fac167d2bea6812b9223b1",
                          "typeString": "literal_string \"dev: \""
                        },
                        "value": "dev: "
                      },
                      {
                        "id": 12834,
                        "name": "dev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12515,
                        "src": "2789:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8ddf00cdbd992f2515e3df7838a15bd51ed5d59294fac167d2bea6812b9223b1",
                          "typeString": "literal_string \"dev: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12830,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11656,
                        "src": "2768:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$11656_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 12832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2776:3:11",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4351,
                      "src": "2768:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 12835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2768:25:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12836,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "323030",
                        "id": 12840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2821:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "expression": {
                        "id": 12837,
                        "name": "faucet",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12505,
                        "src": "2805:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Faucet_$99",
                          "typeString": "contract Faucet"
                        }
                      },
                      "id": 12839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2812:8:11",
                      "memberName": "setLimit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "2805:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 12841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:20:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12842,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:20:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 12844,
                            "name": "faucet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12505,
                            "src": "2844:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Faucet_$99",
                              "typeString": "contract Faucet"
                            }
                          },
                          "id": 12845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2851:5:11",
                          "memberName": "limit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "2844:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 12846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2844:14:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "323030",
                        "id": 12847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2860:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        },
                        "value": "200"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_200_by_1",
                          "typeString": "int_const 200"
                        }
                      ],
                      "id": 12843,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        452,
                        477,
                        507,
                        532,
                        591,
                        616,
                        646,
                        671,
                        1771,
                        1806
                      ],
                      "referencedDeclaration": 646,
                      "src": "2835:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 12848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12849,
                  "nodeType": "ExpressionStatement",
                  "src": "2835:29:11"
                }
              ]
            },
            "functionSelector": "68603484",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_setLimit",
            "nameLocation": "2472:13:11",
            "parameters": {
              "id": 12786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2485:2:11"
            },
            "returnParameters": {
              "id": 12787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2496:0:11"
            },
            "scope": 12852,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12591,
              "name": "BaseSetup",
              "nameLocations": [
                "1037:9:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12590,
              "src": "1037:9:11"
            },
            "id": 12592,
            "nodeType": "InheritanceSpecifier",
            "src": "1037:9:11"
          }
        ],
        "canonicalName": "FaucetTest",
        "contractDependencies": [
          99,
          131,
          12970
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12852,
          12590,
          2355,
          1918
        ],
        "name": "FaucetTest",
        "nameLocation": "1023:10:11",
        "scope": 12853,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 11
}